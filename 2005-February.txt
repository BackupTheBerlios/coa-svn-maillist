From leny at sheep.berlios.de  Sun Feb 13 01:22:24 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Sun, 13 Feb 2005 01:22:24 +0100
Subject: [Coa-svn] r2 - in trunk: . bordel_en_attendant bordel_en_attendant/COA bordel_en_attendant/MonApplet bordel_en_attendant/MonApplet/lleszko bordel_en_attendant/MonApplet/lleszko/corba
Message-ID: <200502130022.j1D0MOqQ030845@sheep.berlios.de>

Author: leny
Date: 2005-02-13 01:22:14 +0100 (Sun, 13 Feb 2005)
New Revision: 2

Added:
   trunk/bordel_en_attendant/
   trunk/bordel_en_attendant/COA/
   trunk/bordel_en_attendant/COA/.classpath
   trunk/bordel_en_attendant/COA/.project
   trunk/bordel_en_attendant/COA/AppletCOA.class
   trunk/bordel_en_attendant/COA/AppletCOA.java
   trunk/bordel_en_attendant/COA/COACardInterface.class
   trunk/bordel_en_attendant/COA/COACardInterface.java
   trunk/bordel_en_attendant/MonApplet/
   trunk/bordel_en_attendant/MonApplet/.checkstyle
   trunk/bordel_en_attendant/MonApplet/.classpath
   trunk/bordel_en_attendant/MonApplet/.project
   trunk/bordel_en_attendant/MonApplet/.umlproject
   trunk/bordel_en_attendant/MonApplet/lleszko/
   trunk/bordel_en_attendant/MonApplet/lleszko/corba/
   trunk/bordel_en_attendant/MonApplet/lleszko/corba/MonApplet.class
   trunk/bordel_en_attendant/MonApplet/lleszko/corba/MonApplet.java
Log:


Added: trunk/bordel_en_attendant/COA/.classpath
===================================================================
--- trunk/bordel_en_attendant/COA/.classpath	2005-02-10 20:35:29 UTC (rev 1)
+++ trunk/bordel_en_attendant/COA/.classpath	2005-02-13 00:22:14 UTC (rev 2)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path=""/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/vopcardservice.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/base-core.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/base-opt.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/capdump.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/cmdgxp211_pk.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/cmdgxp211v1.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/cmdgxp211v2.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/cryptix-gemxpresso.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/cryptix-gemxpresso-is.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/cryptix-jce-api.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/gcf2gxcfconverter.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/gemplus-rad-terminals.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/gemplus-terminals.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/gemplus-util.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/gemxpresso.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/gemxpresso-filemanager.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/gsecardservice.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/gse-gui.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/gxpconverter.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/gxpproject.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/gxpradplugin-core.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/gxputil.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/jhall.jar"/>
+	<classpathentry kind="lib" path="C:/Gemplus/GemXpresso.rad3/lib/pcsc_wrapper.jar"/>
+	<classpathentry kind="output" path=""/>
+</classpath>

Added: trunk/bordel_en_attendant/COA/.project
===================================================================
--- trunk/bordel_en_attendant/COA/.project	2005-02-10 20:35:29 UTC (rev 1)
+++ trunk/bordel_en_attendant/COA/.project	2005-02-13 00:22:14 UTC (rev 2)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>COA</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

Added: trunk/bordel_en_attendant/COA/AppletCOA.class
===================================================================
(Binary files differ)


Property changes on: trunk/bordel_en_attendant/COA/AppletCOA.class
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/bordel_en_attendant/COA/AppletCOA.java
===================================================================
--- trunk/bordel_en_attendant/COA/AppletCOA.java	2005-02-10 20:35:29 UTC (rev 1)
+++ trunk/bordel_en_attendant/COA/AppletCOA.java	2005-02-13 00:22:14 UTC (rev 2)
@@ -0,0 +1,43 @@
+
+import java.util.ArrayList;
+import java.util.TreeMap;
+
+import opencard.opt.applet.AppletID;
+
+public class AppletCOA {
+
+	private AppletID aid;
+	private TreeMap mapINS = new TreeMap();
+	
+	/**
+	 * @param aid
+	 */
+	public AppletCOA(AppletID aid) {
+		super();
+		this.aid = aid;
+	}
+	
+	
+	/**
+	 * @return Returns the aid.
+	 */
+	public AppletID getAid() {
+		return aid;
+	}
+	/**
+	 * @return Returns the listINS.
+	 */
+	public TreeMap getMapINS() {
+		return mapINS;
+	}
+	
+	public byte getINS(String name)
+	{
+		return ((Byte)mapINS.get(name)).byteValue();
+	}
+	
+	public void addINS(byte number, String name)
+	{
+		mapINS.put(name, new Byte(number));
+	}
+}

Added: trunk/bordel_en_attendant/COA/COACardInterface.class
===================================================================
(Binary files differ)


Property changes on: trunk/bordel_en_attendant/COA/COACardInterface.class
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/bordel_en_attendant/COA/COACardInterface.java
===================================================================
--- trunk/bordel_en_attendant/COA/COACardInterface.java	2005-02-10 20:35:29 UTC (rev 1)
+++ trunk/bordel_en_attendant/COA/COACardInterface.java	2005-02-13 00:22:14 UTC (rev 2)
@@ -0,0 +1,440 @@
+import java.io.File;
+import java.util.Enumeration;
+import java.util.TreeMap;
+
+import opencard.core.service.CardRequest;
+import opencard.core.service.SmartCard;
+import opencard.core.terminal.CardTerminal;
+import opencard.core.terminal.CardTerminalException;
+import opencard.core.terminal.CardTerminalRegistry;
+import opencard.core.terminal.CommandAPDU;
+import opencard.core.terminal.ResponseAPDU;
+import opencard.opt.applet.AppletID;
+
+import com.gemplus.opencard.service.op.CardObjectStatus;
+import com.gemplus.opencard.service.op.CardServiceOPCore;
+import com.gemplus.opencard.service.op.CardServiceOPException;
+import com.gemplus.opencard.service.op.Result;
+import com.gemplus.opencard.service.op.vop.VOPAuthenticationInput;
+import com.gemplus.opencard.service.op.vop.vop200.CardServiceVOP200;
+import com.gemplus.opencard.service.op.vop.vop211.CardServiceVOP211;
+import com.gemplus.tools.gemxpresso.GemXpressoService;
+import com.gemplus.tools.gemxpresso.util.GxpSystem;
+
+
+class COACardInterface
+{
+    /**
+     * global declarations
+     */
+    // OP/VOP OCF CardService and its high level API library
+    private CardServiceOPCore serv;
+    private boolean isVOP211Compliant = true;
+    private GemXpressoService libService;
+    // OCF CardTerminal for Card or GSE communication
+    private CardTerminal terminal;
+    // OCF objects for APDU transport
+    private CommandAPDU cmd;
+    private ResponseAPDU resp;
+
+    private TreeMap appletMap = new TreeMap();
+    
+    // Windows platform (c:\gemplus\gemxpresso.rad3)
+    private String homeDir = "c:" + File.separator + "gemplus" + File.separator + "gemxpresso.rad3";
+
+    //targets path (<gemxpressorad>\resources\targets)
+    private String keyFileDir;
+
+    //card profile dir (<gemxpressorad>\resouces\cardprofile)
+    private String profileDir;
+
+    /**
+     *  Card target names
+     */
+    // the name defined in the CardTerminal section of the "opencard.properties" file
+    private String cardTarget = "gempc410_com1";
+
+    /**
+     *  Key file
+     */
+    // the key file (GXP211_PK is default)
+    private String cardKeyFile = "GXP211_PK.properties";
+
+    // the target flag, if true the GSE target is used, card otherwise
+    private static boolean simulation = true;
+
+    // the load flag, if true package is loaded in card or GSE
+    private boolean loadPackage  = true;
+
+    // the type of GSE or Card (GXP211_PK is default)
+    private String FrameworkType = "GXP211_PK";
+
+    /**
+     * System authentication informations
+     */
+    // the Security Domain AID used for security
+    private byte[] securityDomainAID = null;
+    // the system key File for management
+    private String keyFile ;
+    // the system key set version
+    private int keySetVersion = 13;
+    // the system key set index (0 is default)
+    private int keyIndex = 0;
+    // the security level definition flags
+    private boolean isEnciphered = false;
+    private boolean isMacing = false;
+
+    /**
+     * Application authentication informations
+     */
+    // the application key Files
+    private String appKeyFile ;
+    // the application key set version
+    private int appKeySetVersion = 13;
+    // the application key set index
+    private int appKeyIndex = 0;
+
+    public COACardInterface()
+    {
+    }
+
+    /**
+     * OCF layer initialisation
+     */
+    public void initOCF()
+    {
+        // start of initialisation
+        try
+        {
+            // start the OCF layer
+            SmartCard.start();
+
+            // fixe the target
+            String target = cardTarget;
+
+            // print found terminals
+            printAvailableTerminals();
+
+            // select the target specific CardTerminal
+            terminal = CardTerminalRegistry.getRegistry().cardTerminalForName(target);
+
+            // check if required terminal name was found
+            if(terminal == null)
+            {
+                throw new Exception("terminal not found : " + target);
+            }
+
+            // retreive the CardTerminal type
+            String type = terminal.getType();
+            if((type.compareTo("SOCKETJC21SIMULATOR") == 0) && !simulation)
+            {
+                throw new Exception("terminal " + target + " is a simulator instance");
+            }
+
+            if(!(type.compareTo("SOCKETJC21SIMULATOR")==0)&& simulation)
+            {
+                throw new Exception("terminal " + target + " is not a simulator instance");
+            }
+
+            // create a new card request object
+            CardRequest cr = new CardRequest(CardRequest.ANYCARD, terminal, null);
+
+            // build the complete key file
+            keyFile = appKeyFile = keyFileDir + File.separator + cardKeyFile;
+
+            // wait for card insertion
+            SmartCard sc = SmartCard.waitForCard(cr);
+            // get the OP/VOP specific CardService
+            if(isVOP211Compliant)
+              serv = (CardServiceOPCore)sc.getCardService(CardServiceVOP211.class, true);
+            else
+              serv = (CardServiceOPCore)sc.getCardService(CardServiceVOP200.class, true);
+
+            //sets FullCrypto if FullCrypto card or Limited Crypto if IS card
+            serv.setFullCrypto(FrameworkType.indexOf("IS")==-1);
+
+            // create the  high level API library object
+            libService = new GemXpressoService();
+            // set the OP/VOP CardService to the service library for communication
+            libService.setCardService(serv);
+
+            // reset the Card or GSE to look for the default ATR
+            serv.warmReset();
+
+            // the service authentication object use for authentication configuration
+            VOPAuthenticationInput authenticationInput;
+            // service authentication object creation
+            authenticationInput = new VOPAuthenticationInput();
+            // look if key set version is defined
+            if(keySetVersion > 0)
+            {
+                // key set version configuration
+                authenticationInput.setKeySetVersion(keySetVersion);
+                // do not use the key set version defined in the target file
+                authenticationInput.setDefaultKeySetVersion(false);
+            }
+            else
+            {
+                // no key set version defined
+                // use the key set version defined in the target file
+                authenticationInput.setDefaultKeySetVersion(true);
+            }
+            // key set version index configuration
+            authenticationInput.setKeyIndex(keyIndex);
+            // security configuration
+            authenticationInput.setEnciphered(isEnciphered);
+            authenticationInput.setMacing(isMacing);
+            // define the target specific key file to use
+            authenticationInput.setKeyfile(keyFile);
+            // define if the security domain has to be select (yes)
+            authenticationInput.setSecurityDomainSelection(true);
+            // define the Security Domain AID
+            // null force the use of the AID present in the target key file
+            authenticationInput.setSecurityDomainAID(null);
+
+            try
+            {
+                // process mutual authentication
+                // initialize/update and external/authenticate are done
+                Result result = serv.openSecureChanel(authenticationInput);
+                // check the result object for authentication status
+                if((result!=null) && !result.isOK())
+                {
+                    throw new Exception("authentication error : " + result.getResultMessage());
+                }
+            }
+            catch(Exception ex)
+            {
+                // authentication fails
+                throw new Exception("authentication error : " + ex.getMessage() );
+            }
+            // authentication succeed
+            System.out.println("Authentication OK");
+            System.out.println("");
+          
+        }
+        catch(Exception ex)
+        {
+            // exception generated during OCF initialization
+            System.out.println("Exception caught in initOCF : " + ex.getMessage() );
+            // terminate client application
+            System.exit( -1 );
+        }
+    }
+
+    /**
+     * PurseClient default constructor
+     */
+    public void setHomeDir(String radHome)
+    {
+        homeDir = radHome;
+    }
+
+    /**
+     * Utility that print the available OCF CardTerminal for the client
+     */
+    private void printAvailableTerminals()
+    {
+          // get an enumeration from the registry
+          java.util.Enumeration terminals = CardTerminalRegistry.getRegistry().
+                                                            getCardTerminals();
+          // the CardTerminal we are retreiving information
+          CardTerminal inFocusTerminal;
+
+          // analyse loop
+          while (terminals.hasMoreElements())
+          {
+                inFocusTerminal = (CardTerminal)terminals.nextElement();
+                System.out.println("Found OCF Card Terminal:");
+                // print the user defined name
+                System.out.println("\t- Name = " + inFocusTerminal.getName());
+                // print the legal type
+                System.out.println("\t- Type = " + inFocusTerminal.getType());
+                // print the corresponding adress
+                System.out.println("\t- Adress = " + inFocusTerminal.getAddress() + "\n");
+          }
+    }
+
+ 
+
+    /**
+     * Free OCF layer used by the client
+     */
+    public void stopOCF()
+    {
+        try
+        {
+            // free the OCF layer before terminating
+            SmartCard.shutdown();
+        }
+        catch(Exception ex)
+        {
+            System.out.println("Exception caught in stopOCF : " + ex.getMessage() );
+            // terminate client application with an exception
+            java.lang.System.exit( -1 );
+        }
+    }
+
+   public void initListApplet()
+   {
+   	Enumeration en = null;
+   	
+   	 try {
+		en = serv.scanCard();
+	} catch (CardServiceOPException e) {
+		// TODO Auto-generated catch block
+		e.printStackTrace();
+	} catch (CardTerminalException e) {
+		// TODO Auto-generated catch block
+		e.printStackTrace();
+	}
+	
+	while(en.hasMoreElements())
+	{
+		CardObjectStatus cOS = (CardObjectStatus)en.nextElement();
+		if(cOS.getCardObjectType()==CardObjectStatus.OBJECT_STATUS_ON_APPLICATION)
+		{
+			appletMap.put(cOS.getAIDAsString(), new AppletCOA(cOS.getAID()));
+			
+			AppletCOA ap = new AppletCOA(cOS.getAID());
+			makeAppletINSMap(ap);
+			appletMap.put(cOS.getAID().toString(), ap);
+		}
+	}
+   }
+   
+   private void makeAppletINSMap(AppletCOA applet)
+   {
+   		byte [] desc = getAppletDescription(applet.getAid());
+   		int i = 2;
+   		
+		if((desc.length<2)||(desc[0]!=0x12)||(desc[1]!=0x03))
+			return;
+
+  		while(desc[i]!=(byte)0x90 && desc[i+1]!=(byte)0x0)
+   		{
+   			byte [] tmpBuff = new byte[256];
+   			String insName = null;
+   			byte ins = 0;
+   			int j = 0;
+   			
+   			for(j = 0;desc[i]!=00;i++,j++)
+   				tmpBuff[j] = desc[i];
+   			
+   			ins = desc[++i];
+   			
+   			i++;
+   			
+   			insName = bytesToString(tmpBuff, (int)j);
+
+   			applet.addINS(ins, insName);
+   		}
+   }
+
+   private byte[] getAppletDescription(AppletID aid)
+   {
+   	try {
+   		byte [] aidBuffer = new byte[5];
+		
+   		serv.select(aid);
+		
+   		aidBuffer[0] = aid.getBytes()[0];
+   		aidBuffer[1] = (byte)0xFF;
+   		aidBuffer[2] = (byte)0x00;
+   		aidBuffer[3] = (byte)0x00;
+   		aidBuffer[4] = (byte)0x00;
+		
+		ResponseAPDU response = serv.sendAPDU(aidBuffer);
+				
+		return response.getBuffer();
+		
+	} catch (CardServiceOPException e) {
+		// TODO Auto-generated catch block
+		e.printStackTrace();
+	} catch (CardTerminalException e) {
+		// TODO Auto-generated catch block
+		e.printStackTrace();
+	}
+	
+	return null;
+   }
+   
+    /**
+     * Application main entry point.
+     * @param argv not used by default application.
+     */
+    public static void main(String[] argv)
+    {
+        String radHome = null;
+        String cardT = null;
+
+        // parse arguments
+        for(int i=0; i<argv.length; i++)
+        {
+            // card request
+            if(argv[i].toLowerCase().equals("-card"))
+                simulation = false;
+            // GSE request
+            if(argv[i].toLowerCase().equals("-gse"))
+                simulation = true;
+            // rad home directory
+            if(argv[i].toLowerCase().equals("-radhome"))
+                radHome = argv[++i];
+            if(argv[i].toLowerCase().equals("-cardtype")) {
+                cardT = argv[++i];
+            }
+        }
+
+        if(cardT == null) {
+          System.exit(-1);
+        }
+        // create client instance
+        COACardInterface client = new COACardInterface();
+        client.cardKeyFile = cardT + ".properties";
+        client.FrameworkType = cardT;
+        if( cardT.equals("GXP211v1") || cardT.equals("GXP211v1_IS"))
+          client.isVOP211Compliant = false;
+        else
+          client.isVOP211Compliant = true;
+
+        // change rad home directory used for properties files.
+        if( radHome != null) client.setHomeDir(radHome);
+
+        //allows to get all path properties for GemXpressoRad
+        GxpSystem.getInstance().setRadHome(client.homeDir);
+
+        //sets the targets dir
+        client.keyFileDir = System.getProperty("gemplus.gemxpresso.rad.home.resources.targets");
+        //sets the card profile dir
+        client.profileDir = System.getProperty("gemplus.gemxpresso.rad.home.resources.cardprofile");
+        //!!!!REQUIRED !!!!
+        //sets user.dir to <gemxpressorad>\conf directory for OCF initialization (initOCF)
+        //OCF automatically search the opencard.properties file in the user.dir (current) directory.
+        System.setProperty("user.dir", System.getProperty("gemplus.gemxpresso.rad.home.conf"));
+
+        System.out.println("----- start of COACardInterface client application -----");
+
+        // initialise OCF layer
+        client.initOCF();
+
+        client.initListApplet();
+        
+          // free OCF layer
+        client.stopOCF();
+
+        System.out.println("----- end of COACardInterface client application -----");
+        // terminate client application normally
+        java.lang.System.exit(0) ;
+    }
+    
+    private String bytesToString(byte[] b, int len) {
+		byte[] c = new byte[len];
+		for(int i=0; i<len; i++) {
+			byte n = b[i];
+			if ((n < 32) || (n > 128))
+				n = 65;
+			c[i] = n;
+		}
+		return new String(c);
+	}
+}

Added: trunk/bordel_en_attendant/MonApplet/.checkstyle
===================================================================
--- trunk/bordel_en_attendant/MonApplet/.checkstyle	2005-02-10 20:35:29 UTC (rev 1)
+++ trunk/bordel_en_attendant/MonApplet/.checkstyle	2005-02-13 00:22:14 UTC (rev 2)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<fileset-config file-format-version="1.0.0"/>

Added: trunk/bordel_en_attendant/MonApplet/.classpath
===================================================================
--- trunk/bordel_en_attendant/MonApplet/.classpath	2005-02-10 20:35:29 UTC (rev 1)
+++ trunk/bordel_en_attendant/MonApplet/.classpath	2005-02-13 00:22:14 UTC (rev 2)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path=""/>
+	<classpathentry kind="lib" path="C:/jdk1.2.2/lib/comm.jar"/>
+	<classpathentry kind="lib" path="C:/jdk1.2.2/lib/dt.jar"/>
+	<classpathentry kind="lib" path="C:/jdk1.2.2/lib/tools.jar"/>
+	<classpathentry kind="lib" path="C:/jdk1.2.2/lib/ext/comm.jar"/>
+	<classpathentry kind="lib" path="C:/jdk1.2.2/jre/lib/i18n.jar"/>
+	<classpathentry kind="lib" path="C:/jdk1.2.2/jre/lib/jaws.jar"/>
+	<classpathentry kind="lib" path="C:/jdk1.2.2/jre/lib/plugprov.jar"/>
+	<classpathentry kind="lib" path="C:/jdk1.2.2/jre/lib/rt.jar"/>
+	<classpathentry kind="lib" path="C:/jdk1.2.2/lib/javacardframework.jar"/>
+	<classpathentry kind="output" path=""/>
+</classpath>

Added: trunk/bordel_en_attendant/MonApplet/.project
===================================================================
--- trunk/bordel_en_attendant/MonApplet/.project	2005-02-10 20:35:29 UTC (rev 1)
+++ trunk/bordel_en_attendant/MonApplet/.project	2005-02-13 00:22:14 UTC (rev 2)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>MonApplet</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>com.atlassw.tools.eclipse.checkstyle.CheckstyleBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>com.atlassw.tools.eclipse.checkstyle.CheckstyleNature</nature>
+	</natures>
+</projectDescription>

Added: trunk/bordel_en_attendant/MonApplet/.umlproject
===================================================================
--- trunk/bordel_en_attendant/MonApplet/.umlproject	2005-02-10 20:35:29 UTC (rev 1)
+++ trunk/bordel_en_attendant/MonApplet/.umlproject	2005-02-13 00:22:14 UTC (rev 2)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="ASCII"?>
+<properties:ProjectDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:properties="properties.xmi" modelDir="model" libraryDir="libraries" profileDir="profiles" templateDir="templates">
+  <profiles id="org.eclipse.uml2.resources.BasicProfile" description="Basic Profile" uri="platform:/plugin/org.eclipse.uml2.resources/profiles/Basic.profile.uml2" exported="false" kind="system"/>
+  <profiles id="org.eclipse.uml2.resources.IntermediateProfile" description="Intermediate Profile" uri="platform:/plugin/org.eclipse.uml2.resources/profiles/Intermediate.profile.uml2" exported="false" kind="system"/>
+  <profiles id="org.eclipse.uml2.resources.CompleteProfile" description="Complete Profile" uri="platform:/plugin/org.eclipse.uml2.resources/profiles/Complete.profile.uml2" exported="false" kind="system"/>
+  <profiles id="com.omondo.uml.core.JavaProfile" description="Java Profile" uri="platform:/plugin/com.omondo.uml.core/profiles/Java.profile.uml2" exported="false" kind="system"/>
+  <profiles id="com.omondo.uml2.core.OmondoProfile" description="Omondo Profile" uri="platform:/plugin/com.omondo.uml.core/profiles/Omondo.profile.uml2" exported="false" kind="system"/>
+</properties:ProjectDescription>

Added: trunk/bordel_en_attendant/MonApplet/lleszko/corba/MonApplet.class
===================================================================
(Binary files differ)


Property changes on: trunk/bordel_en_attendant/MonApplet/lleszko/corba/MonApplet.class
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/bordel_en_attendant/MonApplet/lleszko/corba/MonApplet.java
===================================================================
--- trunk/bordel_en_attendant/MonApplet/lleszko/corba/MonApplet.java	2005-02-10 20:35:29 UTC (rev 1)
+++ trunk/bordel_en_attendant/MonApplet/lleszko/corba/MonApplet.java	2005-02-13 00:22:14 UTC (rev 2)
@@ -0,0 +1,160 @@
+
+package lleszko.corba;
+
+import javacard.framework.APDU;
+import javacard.framework.Applet;
+import javacard.framework.ISO7816;
+import javacard.framework.ISOException;
+import javacard.framework.Util;
+
+public class MonApplet extends Applet {
+
+	private final static byte CLA_MON_APPLET = (byte)0x91;
+	private final static byte INS_GET_NAME = (byte) 0x13;
+	private final static byte INS_GET_NUMBER = (byte) 0x14;
+	private final static byte INS_DESC = (byte) 0xFE;
+	private final static byte INS_LIST_INS = (byte) 0xFF;
+	private final static byte [] DESC_OK = {(byte)0x12, (byte)0x03};
+	private final static byte [] DESC_NOK = {(byte)0x12, (byte)0x04};
+	private final static byte [] LIST_INS = {(byte)INS_GET_NAME, (byte)INS_GET_NUMBER};	
+	private final static byte [] INS_GET_NAME_DESC = {(byte)'g', (byte)'e',(byte)'t',(byte)'N',(byte)'a',(byte)'m',(byte)'e'};
+	private final static byte [] INS_GET_NUMBER_DESC = {(byte)'g', (byte)'e',(byte)'t',(byte)'N',(byte)'u',(byte)'m',(byte)'b',(byte)'e',(byte)'r'};
+	
+	/**
+	 * 
+	 */
+	public MonApplet(byte [] buffer, short offset, byte length) {
+			register();
+	}
+	
+	public static void install(byte[] buffer, short offset, byte length)
+	{
+		new MonApplet(buffer, offset, length);
+
+
+	}
+	/* (non-Javadoc)
+	 * @see javacard.framework.Applet#process(javacard.framework.APDU)
+	 */
+	public void process(APDU arg0) throws ISOException {
+		
+		byte [] apduBuffer = arg0.getBuffer();
+		
+		if(apduBuffer[ISO7816.OFFSET_CLA]==CLA_MON_APPLET)
+		{
+			switch(apduBuffer[ISO7816.OFFSET_INS])
+			{
+			case INS_GET_NAME:
+				getName(arg0);
+				break;
+			case INS_DESC:
+				sendDesc(arg0);
+				break;
+			case INS_LIST_INS:
+				sendListIns(arg0);
+				break;
+			case INS_GET_NUMBER:
+				getNumber(arg0);
+				break;
+			default:
+				ISOException.throwIt(ISO7816.SW_INS_NOT_SUPPORTED);
+			}
+		}
+	}
+
+	/* (non-Javadoc)
+	 * @see javacard.framework.Applet#deselect()
+	 */
+	public void deselect() {
+		
+		super.deselect();
+	}
+	/* (non-Javadoc)
+	 * @see javacard.framework.Applet#select()
+	 */
+	public boolean select() {
+		
+		return super.select();
+	}
+
+	private void getNumber(APDU apdu)
+	{
+		byte [] apduBuffer = apdu.getBuffer();
+		
+		apduBuffer[5] = (byte)0x12;
+		apduBuffer[6] = (byte)0x03;
+		
+		apdu.setOutgoing();
+		
+		apdu.setOutgoingLength((short)2);
+		
+		apdu.sendBytes((short)5, (short)2);
+	}
+	
+	private void getName(APDU apdu)
+	{
+		byte [] apduBuffer = apdu.getBuffer();
+		
+		apduBuffer[5] = (byte)'A';
+		apduBuffer[6] = (byte)'i';
+		
+		apdu.setOutgoing();
+		
+		apdu.setOutgoingLength((short)2);
+		
+		apdu.sendBytes((short)5, (short)2);
+	}
+
+	private void sendDesc(APDU apdu)
+	{
+		byte [] buffer = apdu.getBuffer();
+		
+		switch(buffer[ISO7816.OFFSET_P1])
+		{
+		case	INS_GET_NAME:
+			sendInsDesc(apdu, INS_GET_NAME_DESC, true);
+			break;
+		case	INS_GET_NUMBER:
+			sendInsDesc(apdu, INS_GET_NUMBER_DESC, true);
+			break;
+		default :
+			sendInsDesc(apdu, null, false);
+		}
+	}
+
+	private void sendListIns(APDU apdu)
+	{
+		byte [] buffer = apdu.getBuffer();
+		
+		Util.arrayCopy(DESC_OK, (short)0, buffer, (short)0, (short)2);
+		Util.arrayCopy(LIST_INS, (short)0, buffer, (short)2, (short)LIST_INS.length);
+		
+		apdu.setOutgoing();
+		apdu.setOutgoingLength((short)(2+LIST_INS.length));
+		
+		apdu.sendBytes((short)0, (short)(2+LIST_INS.length));
+	}
+	
+	private void sendInsDesc(APDU apdu , byte [] desc, boolean ok)
+	{
+		byte [] buffer = apdu.getBuffer();
+		short length = 0;
+		
+		if(ok)
+		{
+			Util.arrayCopy(DESC_OK, (short)0, buffer, (short)0, (short)2);
+			Util.arrayCopy(desc, (short)0, buffer, (short)2, (short)desc.length);
+			length = (short)(2+desc.length);
+		}
+		else
+		{
+			Util.arrayCopy(DESC_NOK, (short)0, buffer, (short)0, (short)2);
+			length = (short)(2);
+		}
+		
+		apdu.setOutgoing();
+		apdu.setOutgoingLength(length);
+		
+		apdu.sendBytes((short)0, length);
+	}
+}



From ludo93500 at sheep.berlios.de  Fri Feb 18 12:04:48 2005
From: ludo93500 at sheep.berlios.de (Ludovic at BerliOS)
Date: Fri, 18 Feb 2005 12:04:48 +0100
Subject: [Coa-svn] r5 - in trunk: . lib
Message-ID: <200502181104.j1IB4mI3000080@sheep.berlios.de>

Author: ludo93500
Date: 2005-02-18 12:04:47 +0100 (Fri, 18 Feb 2005)
New Revision: 5

Added:
   trunk/lib/idl.jar
   trunk/lib/logkit-1.2.jar
Removed:
   trunk/lib/sb-demo-ext.jar
   trunk/lib/sb-demo.jar
Modified:
   trunk/.classpath
Log:


Modified: trunk/.classpath
===================================================================
--- trunk/.classpath	2005-02-18 11:04:27 UTC (rev 4)
+++ trunk/.classpath	2005-02-18 11:04:47 UTC (rev 5)
@@ -9,8 +9,6 @@
 	<classpathentry kind="lib" path="lib/reference-services.jar"/>
 	<classpathentry kind="lib" path="lib/reference-terminals-windows.jar"/>
 	<classpathentry kind="lib" path="lib/rejar-tool.jar"/>
-	<classpathentry kind="lib" path="lib/sb-demo.jar"/>
-	<classpathentry kind="lib" path="lib/sb-demo-ext.jar"/>
 	<classpathentry kind="lib" path="lib/base-core.jar"/>
 	<classpathentry kind="lib" path="lib/base-opt.jar"/>
 	<classpathentry kind="lib" path="lib/apduio.jar"/>
@@ -38,5 +36,8 @@
 	<classpathentry kind="lib" path="lib/gxputil.jar"/>
 	<classpathentry kind="lib" path="lib/pcsc_wrapper.jar"/>
 	<classpathentry kind="lib" path="lib/gemxpresso.jar"/>
+	<classpathentry kind="src" path="generated"/>
+	<classpathentry kind="lib" path="lib/idl.jar"/>
+	<classpathentry kind="lib" path="lib/logkit-1.2.jar"/>
 	<classpathentry kind="output" path="classes"/>
 </classpath>

Added: trunk/lib/idl.jar
===================================================================
(Binary files differ)


Property changes on: trunk/lib/idl.jar
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/lib/logkit-1.2.jar
===================================================================
(Binary files differ)


Property changes on: trunk/lib/logkit-1.2.jar
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Deleted: trunk/lib/sb-demo-ext.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/sb-demo.jar
===================================================================
(Binary files differ)



From leny at sheep.berlios.de  Sun Feb 20 19:50:03 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Sun, 20 Feb 2005 19:50:03 +0100
Subject: [Coa-svn] r6 - trunk/lib
Message-ID: <200502201850.j1KIo3Mx016484@sheep.berlios.de>

Author: leny
Date: 2005-02-20 19:50:01 +0100 (Sun, 20 Feb 2005)
New Revision: 6

Removed:
   trunk/lib/Ctidescr.doc
   trunk/lib/OCFPCSC1.DLL
   trunk/lib/OCFPCSCM.DLL
   trunk/lib/apduio.jar
   trunk/lib/apdutool.jar
   trunk/lib/api21.jar
   trunk/lib/capdump.jar
   trunk/lib/cmdgxp211_pk.jar
   trunk/lib/cmdgxp211v1.jar
   trunk/lib/cmdgxp211v2.jar
   trunk/lib/converter.jar
   trunk/lib/cryptix-gemxpresso-is.jar
   trunk/lib/cryptix-gemxpresso.jar
   trunk/lib/cryptix-jce-api.jar
   trunk/lib/gcf2gxcfconverter.jar
   trunk/lib/gemplus-rad-terminals.jar
   trunk/lib/gemplus-terminals.jar
   trunk/lib/gemplus-util.jar
   trunk/lib/gemxpresso-filemanager.jar
   trunk/lib/gemxpresso.jar
   trunk/lib/genmfc32.dll
   trunk/lib/genuti32.dll
   trunk/lib/gsecardservice.jar
   trunk/lib/gxpconverter.jar
   trunk/lib/gxpproject.jar
   trunk/lib/gxputil.jar
   trunk/lib/idl.jar
   trunk/lib/jcwde.jar
   trunk/lib/logkit-1.2.jar
   trunk/lib/m5948api.dll
   trunk/lib/migterminals.jar
   trunk/lib/offcardverifier.jar
   trunk/lib/pcsc-wrapper-src.jar
   trunk/lib/pcsc_wrapper.jar
   trunk/lib/readers.cfg
   trunk/lib/reference-services.jar
   trunk/lib/reference-terminals-windows.jar
   trunk/lib/rejar-tool.jar
   trunk/lib/res_mgr.h
   trunk/lib/scriptgen.jar
   trunk/lib/sctrm32.dll
   trunk/lib/sctrm32.lib
   trunk/lib/types.h
   trunk/lib/vopcardservice.jar
Log:


Deleted: trunk/lib/Ctidescr.doc
===================================================================
(Binary files differ)

Deleted: trunk/lib/OCFPCSC1.DLL
===================================================================
(Binary files differ)

Deleted: trunk/lib/OCFPCSCM.DLL
===================================================================
(Binary files differ)

Deleted: trunk/lib/apduio.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/apdutool.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/api21.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/capdump.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/cmdgxp211_pk.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/cmdgxp211v1.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/cmdgxp211v2.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/converter.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/cryptix-gemxpresso-is.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/cryptix-gemxpresso.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/cryptix-jce-api.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/gcf2gxcfconverter.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/gemplus-rad-terminals.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/gemplus-terminals.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/gemplus-util.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/gemxpresso-filemanager.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/gemxpresso.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/genmfc32.dll
===================================================================
(Binary files differ)

Deleted: trunk/lib/genuti32.dll
===================================================================
(Binary files differ)

Deleted: trunk/lib/gsecardservice.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/gxpconverter.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/gxpproject.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/gxputil.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/idl.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/jcwde.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/logkit-1.2.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/m5948api.dll
===================================================================
(Binary files differ)

Deleted: trunk/lib/migterminals.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/offcardverifier.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/pcsc-wrapper-src.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/pcsc_wrapper.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/readers.cfg
===================================================================
--- trunk/lib/readers.cfg	2005-02-18 11:04:47 UTC (rev 5)
+++ trunk/lib/readers.cfg	2005-02-20 18:50:01 UTC (rev 6)
@@ -1,6 +0,0 @@
-# Only needed for smart card readers with migration interface
-
-Reader[1]
- PORT_NUMBER = 1
- READER_NAME = IBM 5948-B02 Card Terminal
- DLL_NAME    = genmfc32.dll

Deleted: trunk/lib/reference-services.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/reference-terminals-windows.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/rejar-tool.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/res_mgr.h
===================================================================
--- trunk/lib/res_mgr.h	2005-02-18 11:04:47 UTC (rev 5)
+++ trunk/lib/res_mgr.h	2005-02-20 18:50:01 UTC (rev 6)
@@ -1,163 +0,0 @@
-/*****************************************************************************\
-* Copyright (c) 1998 IBM Corporation
-* file res_mgr.h  , PCSC Migration Interface
-* Definitions for Subset of Resource Manager defined in PCSC specification
-\*****************************************************************************/
-#ifndef _RES_MGR_H_
-#define _RES_MGR_H_
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-#include "types.h"
-
-typedef   void**	 LPSCARDCONTEXT;
-typedef   void*		 SCARDCONTEXT;
-typedef   void**	 LPSCARDHANDLE;
-typedef   void*		 SCARDHANDLE;
-typedef   unsigned char* STR;
-
-#define SCARD_S_SUCCESS			 ((DWORD)0x00000000L)
-
-#define SCARD_E_INVALID_PARAMETER	 ((DWORD)0x80100004L)
-#define SCARD_E_INSUFFICIENT_BUFFER      ((DWORD)0x80100008L)
-#define SCARD_E_UNKNOWN_READER		 ((DWORD)0x80100009L)
-#define SCARD_E_NOT_READY		 ((DWORD)0x80100010L)
-#define SCARD_E_INVALID_VALUE		 ((DWORD)0x80100011L)
-#define SCARD_E_NO_SERVICE		 ((DWORD)0x8010001DL)
-#define SCARD_E_SHARING_VIOLATION	 ((DWORD)0x8010000BL)
-#define SCARD_E_UNSUPPORTED_REQUEST      ((DWORD)0xA0100001L)
-
-#define SCARD_W_UNRESPONSIVE_CARD	 ((DWORD)0x80100066L)
-#define SCARD_W_UNPOWERED_CARD		 ((DWORD)0x80100067L)
-#define SCARD_W_REMOVED_CARD		 ((DWORD)0x80100069L)
-
-#ifndef _WIN32			       /* windows errors		      */
-#define ERROR_INVALID_HANDLE		 ((DWORD)0x00000006L)
-#define ERROR_NOT_SUPPORTED		 ((DWORD)0x00000032L)
-#endif
-
-/* Access Mode Flags */
-#define SCARD_SHARE_EXCLUSIVE		 1
-#define SCARD_SHARE_DIRECT		 3
-
-/* Protocol Identifier Bits */
-#define SCARD_PROTOCOL_UNDEFINED	 0x00000000
-#define SCARD_PROTOCOL_T1		 0x00000002
-
-/* Card Disposition    */
-#define SCARD_UNPOWER_CARD		 2
-#define SCARD_EJECT_CARD		 3
-
-/* Card Reader State   */
-#define SCARD_STATE_UNAWARE		 0x00000000
-#define SCARD_STATE_CHANGED		 0x00000002
-#define SCARD_STATE_UNAVAILABLE		 0x00000008
-#define SCARD_STATE_EMPTY		 0x00000010
-#define SCARD_STATE_PRESENT		 0x00000020
-
-#define SCARD_ABSENT			 1
-#define SCARD_PRESENT			 2
-#define SCARD_POWERED			 4
-
-/* Context Scope       */
-#define SCARD_SCOPE_USER		 0
-
-/* Attributes */
-#define SCARD_ATTR_VALUE(Class, Tag) ((((ULONG)(Class)) << 16) | ((ULONG)(Tag)))
-
-#define SCARD_CLASS_VENDOR_INFO     1   /* Vendor information definitions */
-#define SCARD_CLASS_ICC_STATE       9   /* ICC State specific definitions */
-
-#define SCARD_ATTR_VENDOR_NAME SCARD_ATTR_VALUE(SCARD_CLASS_VENDOR_INFO, 0x0100)
-#define SCARD_ATTR_VENDOR_IFD_TYPE SCARD_ATTR_VALUE(SCARD_CLASS_VENDOR_INFO, 0x0101)
-#define SCARD_ATTR_VENDOR_IFD_VERSION SCARD_ATTR_VALUE(SCARD_CLASS_VENDOR_INFO, 0x0102)
-#define SCARD_ATTR_ATR_STRING SCARD_ATTR_VALUE(SCARD_CLASS_ICC_STATE, 0x0303)
-#define SCARD_ATTR_ICC_PRESENCE SCARD_ATTR_VALUE(SCARD_CLASS_ICC_STATE, 0x0300)
-
-
-/******************************************************************************/
-
-typedef struct {
-	 LPCSTR   szReader;
-	 void* pvUserData;
-	 DWORD dwCurrentState;
-	 DWORD dwEventState;
-	 DWORD dwRes1;		       /* field for RFU			      */
-	 BYTE  bRes2[36];	       /* field for RFU			      */
-      } SCARD_READERSTATE,* LPSCARD_READERSTATE;
-
-typedef struct {
-	 DWORD dwProtocol;
-	 DWORD cbPciLength;
-      } SCARD_IO_REQUEST, *LPSCARD_IO_REQUEST, *const LPCSCARD_IO_REQUEST;
-
-#ifdef _WIN32
-  #ifndef WINSCARDDATA
-  #define WINSCARDDATA __declspec(dllimport)
-  #endif
-  WINSCARDDATA extern SCARD_IO_REQUEST
-     g_rgSCardT1Pci;
-  #define SCARD_PCI_T1 (&g_rgSCardT1Pci)
-#else
-  #define SCARD_PCI_T1 NULL
-#endif
-
-/******************************************************************************/
-/*  Resource Manager Functions Prototypes				      */
-/******************************************************************************/
-#ifndef EXPENTRY
-  #ifdef __OS2__
-    #define EXPENTRY  _System
-  #elif _WIN32
-    #define EXPENTRY   __stdcall
-  #elif _WINDOWS
-    #define EXPENTRY  _far _loadds _pascal
-  #else
-    #define EXPENTRY  far _loadds
-  #endif
-#endif
-
-LONG EXPENTRY SCardEstablishContext(DWORD dwScope, LPVOID pvReserved1,
-				    LPVOID pvReserved, LPSCARDCONTEXT phContext);
-
-LONG EXPENTRY SCardReleaseContext(SCARDCONTEXT hContext);
-
-LONG EXPENTRY SCardConnect(SCARDCONTEXT hContext, LPCTSTR szReader,
-			   DWORD dwShareMode, DWORD dwPreferredProtocol,
-			   LPSCARDHANDLE phCard, LPDWORD pdwActiveProtocol);
-
-LONG EXPENTRY SCardReconnect(SCARDHANDLE hCard, DWORD dwShareMode,
-			     DWORD dwPreferredProtocols,DWORD dwInitialization,
-			     LPDWORD pdwActiveProtocol);
-
-LONG EXPENTRY SCardDisconnect(SCARDHANDLE hCard, DWORD dwDisposition);
-
-LONG EXPENTRY SCardGetStatusChange(SCARDCONTEXT hContext, DWORD dwTimeout,
-				   LPSCARD_READERSTATE rgReaderStates,
-				   DWORD cReaders);
-
-LONG EXPENTRY SCardGetAttrib(SCARDHANDLE CardHandle, DWORD Tag,
-			     LPBYTE ValueBuffer, LPDWORD Length);
-
-LONG EXPENTRY SCardControl(SCARDHANDLE hCard, DWORD dwControlCode,
-			   LPCVOID lpInBuffer, DWORD nInBufferSize,
-			   LPVOID lpOutBuffer, DWORD nOutBufferSize,
-			   LPDWORD lpBytesReturned);
-
-LONG EXPENTRY SCardListReaders(SCARDCONTEXT hContext, LPCTSTR mszGroups,
-			       LPTSTR mszReaders, LPDWORD pcchReaders);
-
-LONG EXPENTRY SCardTransmit(SCARDHANDLE hCard, LPCSCARD_IO_REQUEST pioSendPci,
-		      LPCBYTE pbSebdBuffer, DWORD cbSendLength,
-		      LPSCARD_IO_REQUEST pioRecvPci, LPBYTE pbRecvBuffer,
-		      LPDWORD pcbRecvLength);
-
-
-#ifdef __cplusplus
-}
-
-#endif
-
-#endif

Deleted: trunk/lib/scriptgen.jar
===================================================================
(Binary files differ)

Deleted: trunk/lib/sctrm32.dll
===================================================================
(Binary files differ)

Deleted: trunk/lib/sctrm32.lib
===================================================================
(Binary files differ)

Deleted: trunk/lib/types.h
===================================================================
--- trunk/lib/types.h	2005-02-18 11:04:47 UTC (rev 5)
+++ trunk/lib/types.h	2005-02-20 18:50:01 UTC (rev 6)
@@ -1,92 +0,0 @@
-/*****************************************************************************\
-* Copyright (c) 1998 IBM Corporation
-* file types.h
-\*****************************************************************************/
-
-#ifndef RES_TYPES_INCLUDED
-#define RES_TYPES_INCLUDED
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-#ifndef EXP_VAWIN
-   #if defined(_WIN32)&&(defined(__IBMC__)||defined(__IBMCPP))
-       #define EXP_VAWIN   _Export
-   #else
-       #define EXP_VAWIN
-   #endif
-#endif
-
-
-
-#ifdef _WIN32
-  #include <windows.h>
-
-  #ifndef _NEWLPC_DEFINED_
-  #define _NEWLPC_DEFINED_
-
-    typedef const BYTE * LPCBYTE;
-    typedef const VOID * LPCVOID;
-  #endif
-
-  typedef HINSTANCE    DLLHANDLE;
-#endif
-
-
-#ifdef _DOS
- #include <stdio.h>
-
- typedef const BYTE *  LPCBYTE;
- typedef const VOID *  LPCVOID;
- typedef  void far*    LPVOID;
- typedef  DWORD far*   LPDWORD;
- typedef  BYTE far*    LPBYTE;
- typedef  char far*    LPCTSTR;
- typedef  void far*    LPCVOID;
- typedef  BYTE far*    LPTSTR;
-
- #define  DLLHANDLE       BYTE /* placeholder for DLL handles  not used in DOS*/
-#endif
-
-#ifdef __OS2__
- #define INCL_DOSMODULEMGR
- #include <os2.h>
- #include <stdio.h>
- #include <stdlib.h>
-
- #define OS_SCARD_PCI_T1  NULL
-
- typedef  HMODULE         DLLHANDLE;
-
- #ifndef S_OS2_32
- typedef  unsigned long   DWORD;
- typedef  void *          LPVOID;
- typedef  DWORD*          LPDWORD;
- typedef  BYTE *          LPBYTE;
- #endif
-
- typedef  const char *    LPCBYTE;
- typedef  char *          LPCTSTR;
- typedef  const char *    LPCSTR;
- typedef  void *          LPCVOID;
- typedef  BYTE *          LPTSTR;
-#endif
-
-#ifdef _WINDOWS
- #include <windows.h>
- typedef  unsigned long   DWORD;
- typedef  unsigned short  WORD;
- typedef  unsigned char   BYTE;
- typedef  HINSTANCE       DLLHANDLE;
- typedef  char far*       LPCTSTR;
- typedef  void far*       LPCVOID;
- typedef  BYTE far*       LPTSTR;
-#endif
-
-#ifdef __cplusplus
-}
-
-#endif
-#endif
-

Deleted: trunk/lib/vopcardservice.jar
===================================================================
(Binary files differ)



From leny at sheep.berlios.de  Sun Feb 20 23:44:24 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Sun, 20 Feb 2005 23:44:24 +0100
Subject: [Coa-svn] r7 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502202244.j1KMiOHv029401@sheep.berlios.de>

Author: leny
Date: 2005-02-20 23:44:23 +0100 (Sun, 20 Feb 2005)
New Revision: 7

Added:
   trunk/src/fr/umlv/coa/javacard/COAJavaCardListener.java
Modified:
   trunk/src/fr/umlv/coa/javacard/AppletCOA.java
   trunk/src/fr/umlv/coa/javacard/COACardInterface.java
Log:


Modified: trunk/src/fr/umlv/coa/javacard/AppletCOA.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/AppletCOA.java	2005-02-20 18:50:01 UTC (rev 6)
+++ trunk/src/fr/umlv/coa/javacard/AppletCOA.java	2005-02-20 22:44:23 UTC (rev 7)
@@ -7,25 +7,24 @@
 
 
 /**
- * 
- * @author Leny
- *
  */
 public final class AppletCOA
 {
 	/** The applet ID */
-	private AppletID aid;
-	private Map		 mapINS	= new HashMap ();
-	
+	private AppletID	aid;
+	private Map			mapINS	= new HashMap ();
+	private String		name;
+
 	/**
 	 * @param aid
 	 */
-	public AppletCOA (AppletID aid)
+	public AppletCOA (AppletID aid, String name)
 	{
 		super ();
 		this.aid = aid;
+		this.name = name;
 	}
-	
+
 	/**
 	 * @return Returns the aid.
 	 */
@@ -33,7 +32,7 @@
 	{
 		return aid;
 	}
-	
+
 	/**
 	 * @return Returns the listINS.
 	 */
@@ -41,8 +40,7 @@
 	{
 		return mapINS;
 	}
-	
-	
+
 	/**
 	 * @param name
 	 * @return
@@ -51,8 +49,7 @@
 	{
 		return ((Byte) mapINS.get (name)).byteValue ();
 	}
-	
-	
+
 	/**
 	 * @param number
 	 * @param name
@@ -61,4 +58,9 @@
 	{
 		mapINS.put (name , new Byte (number));
 	}
-}
+		
+	public String getName ()
+	{
+		return name;
+	}
+}
\ No newline at end of file

Modified: trunk/src/fr/umlv/coa/javacard/COACardInterface.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-20 18:50:01 UTC (rev 6)
+++ trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-20 22:44:23 UTC (rev 7)
@@ -1,9 +1,14 @@
 package fr.umlv.coa.javacard;
 
 import java.io.File;
+import java.util.ArrayList;
 import java.util.Enumeration;
+import java.util.Iterator;
+import java.util.List;
 import java.util.TreeMap;
 
+import opencard.core.event.CTListener;
+import opencard.core.event.EventGenerator;
 import opencard.core.service.CardRequest;
 import opencard.core.service.SmartCard;
 import opencard.core.terminal.CardTerminal;
@@ -23,261 +28,160 @@
 import com.gemplus.tools.gemxpresso.GemXpressoService;
 import com.gemplus.tools.gemxpresso.util.GxpSystem;
 
+import fr.umlv.boss.client.util.BOSSErrorListener;
+import fr.umlv.boss.client.util.ErrorManager;
 
+
 class COACardInterface
 {
-	/**
-	 * global declarations
-	 */
-	// OP/VOP OCF CardService and its high level API library
-	private CardServiceOPCore	serv;
-	private boolean				isVOP211Compliant	= true;
-	private GemXpressoService	libService;
-	// OCF CardTerminal for Card or GSE communication
-	private CardTerminal		terminal;
-	// OCF objects for APDU transport
-	private CommandAPDU			cmd;
-	private ResponseAPDU		resp;
-	
-	private TreeMap				appletMap			= new TreeMap ();
-	
-	// Windows platform (c:\gemplus\gemxpresso.rad3)
-	private String				homeDir				= "c:" + File.separator + "gemplus" + File.separator + "gemxpresso.rad3";
-	
-	//targets path (<gemxpressorad>\resources\targets)
-	private String				keyFileDir;
-	
-	//card profile dir (<gemxpressorad>\resouces\cardprofile)
-	private String				profileDir;
-	
-	/**
-	 *  Card target names
-	 */
-	// the name defined in the CardTerminal section of the "opencard.properties" file
-	private String				cardTarget			= "gempc410_com1";
-	
-	/**
-	 *  Key file
-	 */
-	// the key file (GXP211_PK is default)
-	private String				cardKeyFile			= "GXP211_PK.properties";
-	
-	// the target flag, if true the GSE target is used, card otherwise
-	private static boolean		simulation			= true;
-	
-	// the load flag, if true package is loaded in card or GSE
-	private boolean				loadPackage			= true;
-	
-	// the type of GSE or Card (GXP211_PK is default)
-	private String				FrameworkType		= "GXP211_PK";
-	
-	/**
-	 * System authentication informations
-	 */
-	// the Security Domain AID used for security
-	private byte []				securityDomainAID	= null;
-	// the system key File for management
-	private String				keyFile;
-	// the system key set version
-	private int					keySetVersion		= 13;
-	// the system key set index (0 is default)
-	private int					keyIndex			= 0;
-	// the security level definition flags
-	private boolean				isEnciphered		= false;
-	private boolean				isMacing			= false;
-	
-	/**
-	 * Application authentication informations
-	 */
-	// the application key Files
-	private String				appKeyFile;
-	// the application key set version
-	private int					appKeySetVersion	= 13;
-	// the application key set index
-	private int					appKeyIndex			= 0;
-	
+
+	private CardServiceOPCore		serv;
+	private GemXpressoService		libService;
+
+	private CardTerminal			terminal			= null;
+	private SmartCard				card				= null;
+	private int						slotId				= 0;
+
+	private TreeMap					appletMap			= new TreeMap ();
+
+	private String					homeDir				= "c:" + File.separator + "gemplus" + File.separator + "gemxpresso.rad3";
+
+	private String					keyFileDir;
+
+	private String					profileDir;
+
+	private String					cardTarget			= "gempc410_com1";
+
+	private String					cardKeyFile			= "GXP211_PK.properties";
+
+	private boolean					loadPackage			= true;
+
+	private String					frameworkType		= "GXP211_PK";
+
+	private byte []					securityDomainAID	= null;
+	private String					keyFile;
+	private int						keySetVersion		= 13;
+	private int						keyIndex			= 0;
+	private boolean					isEnciphered		= false;
+	private boolean					isMacing			= false;
+
+	private String					appKeyFile;
+	private int						appKeySetVersion	= 13;
+	private int						appKeyIndex			= 0;
+
+	private final List				listListener		= new ArrayList ();
+
+	private static COACardInterface	INSTANCE			= null;
+
 	public COACardInterface ()
 	{
 	}
-	
-	/**
-	 * OCF layer initialisation
-	 */
+
+	public static COACardInterface getInstance ()
+	{
+		if (INSTANCE == null)
+			INSTANCE = new COACardInterface ();
+
+		return INSTANCE;
+	}
+
+	public boolean addErrorListener (CTListener l)
+	{
+		return listListener.add (l);
+	}
+
+	public boolean removeErrorListener (CTListener l)
+	{
+		return listListener.remove (l);
+	}
+
 	public void initOCF ()
 	{
-		// start of initialisation
 		try
 		{
-			// start the OCF layer
 			SmartCard.start ();
-			
-			// fixe the target
-			String target = cardTarget;
-			
-			// print found terminals
+
 			printAvailableTerminals ();
-			
-			// select the target specific CardTerminal
-			terminal = CardTerminalRegistry.getRegistry ().cardTerminalForName (target);
-			
-			// check if required terminal name was found
-			if (terminal == null)
-			{
-				throw new Exception ("terminal not found : " + target);
-			}
-			
-			// retreive the CardTerminal type
-			String type = terminal.getType ();
-			if ((type.compareTo ("SOCKETJC21SIMULATOR") == 0) && !simulation)
-			{
-				throw new Exception ("terminal " + target + " is a simulator instance");
-			}
-			
-			if (!(type.compareTo ("SOCKETJC21SIMULATOR") == 0) && simulation)
-			{
-				throw new Exception ("terminal " + target + " is not a simulator instance");
-			}
-			
-			// create a new card request object
-			CardRequest cr = new CardRequest (CardRequest.ANYCARD, terminal, null);
-			
-			// build the complete key file
-			keyFile = appKeyFile = keyFileDir + File.separator + cardKeyFile;
-			
-			// wait for card insertion
-			SmartCard sc = SmartCard.waitForCard (cr);
-			// get the OP/VOP specific CardService
-			if (isVOP211Compliant)
-				serv = (CardServiceOPCore) sc.getCardService (CardServiceVOP211.class , true);
-			else
-				serv = (CardServiceOPCore) sc.getCardService (CardServiceVOP200.class , true);
-			
-			//sets FullCrypto if FullCrypto card or Limited Crypto if IS card
-			serv.setFullCrypto (FrameworkType.indexOf ("IS") == -1);
-			
-			// create the  high level API library object
-			libService = new GemXpressoService ();
-			// set the OP/VOP CardService to the service library for communication
-			libService.setCardService (serv);
-			
-			// reset the Card or GSE to look for the default ATR
-			serv.warmReset ();
-			
-			// the service authentication object use for authentication configuration
-			VOPAuthenticationInput authenticationInput;
-			// service authentication object creation
-			authenticationInput = new VOPAuthenticationInput ();
-			// look if key set version is defined
-			if (keySetVersion > 0)
-			{
-				// key set version configuration
-				authenticationInput.setKeySetVersion (keySetVersion);
-				// do not use the key set version defined in the target file
-				authenticationInput.setDefaultKeySetVersion (false);
-			}
-			else
-			{
-				// no key set version defined
-				// use the key set version defined in the target file
-				authenticationInput.setDefaultKeySetVersion (true);
-			}
-			// key set version index configuration
-			authenticationInput.setKeyIndex (keyIndex);
-			// security configuration
-			authenticationInput.setEnciphered (isEnciphered);
-			authenticationInput.setMacing (isMacing);
-			// define the target specific key file to use
-			authenticationInput.setKeyfile (keyFile);
-			// define if the security domain has to be select (yes)
-			authenticationInput.setSecurityDomainSelection (true);
-			// define the Security Domain AID
-			// null force the use of the AID present in the target key file
-			authenticationInput.setSecurityDomainAID (null);
-			
-			try
-			{
-				// process mutual authentication
-				// initialize/update and external/authenticate are done
-				Result result = serv.openSecureChanel (authenticationInput);
-				// check the result object for authentication status
-				if ((result != null) && !result.isOK ())
-				{
-					throw new Exception ("authentication error : " + result.getResultMessage ());
-				}
-			}
-			catch (Exception ex)
-			{
-				// authentication fails
-				throw new Exception ("authentication error : " + ex.getMessage ());
-			}
-			// authentication succeed
-			System.out.println ("Authentication OK");
-			System.out.println ("");
-			
 		}
 		catch (Exception ex)
 		{
-			// exception generated during OCF initialization
 			System.out.println ("Exception caught in initOCF : " + ex.getMessage ());
-			// terminate client application
 			System.exit (-1);
 		}
 	}
-	
-	/**
-	 * PurseClient default constructor
-	 */
-	public void setHomeDir (String radHome)
+
+	private void authentication ()
 	{
-		homeDir = radHome;
+		keyFile = appKeyFile = keyFileDir + File.separator + cardKeyFile;
+
+		serv = (CardServiceOPCore) card.getCardService (CardServiceVOP211.class , true);
+
+		serv.setFullCrypto (true);
+
+		libService = new GemXpressoService ();
+		libService.setCardService (serv);
+
+		serv.warmReset ();
+
+		VOPAuthenticationInput authenticationInput;
+		authenticationInput = new VOPAuthenticationInput ();
+
+		authenticationInput.setKeySetVersion (keySetVersion);
+		authenticationInput.setDefaultKeySetVersion (false);
+
+		authenticationInput.setKeyIndex (keyIndex);
+		authenticationInput.setEnciphered (isEnciphered);
+		authenticationInput.setMacing (isMacing);
+		authenticationInput.setKeyfile (keyFile);
+		authenticationInput.setSecurityDomainSelection (true);
+		authenticationInput.setSecurityDomainAID (null);
+
+		try
+		{
+			Result result = serv.openSecureChanel (authenticationInput);
+			if ((result != null) && !result.isOK ())
+			{
+				throw new Exception ("authentication error : " + result.getResultMessage ());
+			}
+		}
+		catch (Exception ex)
+		{
+			throw new Exception ("authentication error : " + ex.getMessage ());
+		}
 	}
-	
-	/**
-	 * Utility that print the available OCF CardTerminal for the client
-	 */
+
 	private void printAvailableTerminals ()
 	{
-		// get an enumeration from the registry
-		java.util.Enumeration terminals = CardTerminalRegistry.getRegistry ().getCardTerminals ();
-		// the CardTerminal we are retreiving information
+		Enumeration terminals = CardTerminalRegistry.getRegistry ().getCardTerminals ();
 		CardTerminal inFocusTerminal;
-		
-		// analyse loop
+
 		while (terminals.hasMoreElements ())
 		{
 			inFocusTerminal = (CardTerminal) terminals.nextElement ();
 			System.out.println ("Found OCF Card Terminal:");
-			// print the user defined name
 			System.out.println ("\t- Name = " + inFocusTerminal.getName ());
-			// print the legal type
 			System.out.println ("\t- Type = " + inFocusTerminal.getType ());
-			// print the corresponding adress
 			System.out.println ("\t- Adress = " + inFocusTerminal.getAddress () + "\n");
 		}
 	}
-	
-	/**
-	 * Free OCF layer used by the client
-	 */
+
 	public void stopOCF ()
 	{
 		try
 		{
-			// free the OCF layer before terminating
 			SmartCard.shutdown ();
 		}
 		catch (Exception ex)
 		{
 			System.out.println ("Exception caught in stopOCF : " + ex.getMessage ());
-			// terminate client application with an exception
 			java.lang.System.exit (-1);
 		}
 	}
-	
+
 	public void initListApplet ()
 	{
 		Enumeration en = null;
-		
+
 		try
 		{
 			en = serv.scanCard ();
@@ -292,153 +196,128 @@
 			// TODO Auto-generated catch block
 			e.printStackTrace ();
 		}
-		
+
 		while (en.hasMoreElements ())
 		{
 			CardObjectStatus cOS = (CardObjectStatus) en.nextElement ();
 			if (cOS.getCardObjectType () == CardObjectStatus.OBJECT_STATUS_ON_APPLICATION)
 			{
 				appletMap.put (cOS.getAIDAsString () , new AppletCOA (cOS.getAID ()));
-				
+
 				AppletCOA ap = new AppletCOA (cOS.getAID ());
 				makeAppletINSMap (ap);
 				appletMap.put (cOS.getAID ().toString () , ap);
 			}
 		}
 	}
-	
+
 	private void makeAppletINSMap (AppletCOA applet)
 	{
 		byte [] desc = getAppletDescription (applet.getAid ());
 		int i = 2;
-		
+
 		if ((desc.length < 2) || (desc [0] != 0x12) || (desc [1] != 0x03))
 			return;
-		
+
 		while (desc [i] != (byte) 0x90 && desc [i + 1] != (byte) 0x0)
 		{
 			byte [] tmpBuff = new byte [256];
 			String insName = null;
 			byte ins = 0;
 			int j = 0;
-			
+
 			for (j = 0; desc [i] != 00; i++, j++)
 				tmpBuff [j] = desc [i];
-			
+
 			ins = desc [++i];
-			
+
 			i++;
-			
+
 			insName = bytesToString (tmpBuff , (int) j);
-			
+
 			applet.addINS (ins , insName);
 		}
 	}
-	
+
 	private byte [] getAppletDescription (AppletID aid)
 	{
 		try
 		{
 			byte [] aidBuffer = new byte [5];
-			
+
 			serv.select (aid);
-			
+
 			aidBuffer [0] = aid.getBytes () [0];
 			aidBuffer [1] = (byte) 0xFF;
 			aidBuffer [2] = (byte) 0x00;
 			aidBuffer [3] = (byte) 0x00;
 			aidBuffer [4] = (byte) 0x00;
-			
+
 			ResponseAPDU response = serv.sendAPDU (aidBuffer);
-			
+
 			return response.getBuffer ();
-			
+
 		}
-		catch (CardServiceOPException e)
+		catch (Exception e)
 		{
-			// TODO Auto-generated catch block
 			e.printStackTrace ();
 		}
-		catch (CardTerminalException e)
-		{
-			// TODO Auto-generated catch block
-			e.printStackTrace ();
-		}
-		
+
 		return null;
 	}
-	
-	/**
-	 * Application main entry point.
-	 * @param argv not used by default application.
-	 */
-	public static void main (String [] argv)
+
+	public void cardInserted (SmartCard card, CardTerminal terminal, int slotId)
 	{
-		String radHome = null;
-		String cardT = null;
-		
-		// parse arguments
-		for (int i = 0; i < argv.length; i++)
+		this.card = card;
+		this.terminal = terminal;
+		this.slotId = slotId;
+
+		initListApplet ();
+
+		fireCardInserted ();
+	}
+
+	public void cardRemoved ()
+	{
+		fireCardRemoved ();
+	}
+
+	private void fireCardInserted ()
+	{
+		for (Iterator i = listListener.iterator (); i.hasNext ();)
+			((CTListener) i.next ()).cardInserted (null);
+	}
+
+	private void fireCardRemoved ()
+	{
+		for (Iterator i = listListener.iterator (); i.hasNext ();)
+			((CTListener) i.next ()).cardRemoved (null);
+	}
+
+	public void init (String [] argv)
+	{
+		GxpSystem.getInstance ().setRadHome (homeDir);
+
+		keyFileDir = System.getProperty ("gemplus.gemxpresso.rad.home.resources.targets");
+		profileDir = System.getProperty ("gemplus.gemxpresso.rad.home.resources.cardprofile");
+		System.setProperty ("user.dir" , System.getProperty ("gemplus.gemxpresso.rad.home.conf"));
+
+		System.out.println ("COACardInterface started");
+
+		initOCF ();
+
+		EventGenerator.getGenerator ().addCTListener (new COAJavaCardListener ());
+
+		while (true)
 		{
-			// card request
-			if (argv [i].toLowerCase ().equals ("-card"))
-				simulation = false;
-			// GSE request
-			if (argv [i].toLowerCase ().equals ("-gse"))
-				simulation = true;
-			// rad home directory
-			if (argv [i].toLowerCase ().equals ("-radhome"))
-				radHome = argv [++i];
-			if (argv [i].toLowerCase ().equals ("-cardtype"))
-			{
-				cardT = argv [++i];
-			}
+
 		}
-		
-		if (cardT == null)
-		{
-			System.exit (-1);
-		}
-		// create client instance
-		COACardInterface client = new COACardInterface ();
-		client.cardKeyFile = cardT + ".properties";
-		client.FrameworkType = cardT;
-		if (cardT.equals ("GXP211v1") || cardT.equals ("GXP211v1_IS"))
-			client.isVOP211Compliant = false;
-		else
-			client.isVOP211Compliant = true;
-		
-		// change rad home directory used for properties files.
-		if (radHome != null)
-			client.setHomeDir (radHome);
-		
-		//allows to get all path properties for GemXpressoRad
-		GxpSystem.getInstance ().setRadHome (client.homeDir);
-		
-		//sets the targets dir
-		client.keyFileDir = System.getProperty ("gemplus.gemxpresso.rad.home.resources.targets");
-		//sets the card profile dir
-		client.profileDir = System.getProperty ("gemplus.gemxpresso.rad.home.resources.cardprofile");
-		//!!!!REQUIRED !!!!
-		//sets user.dir to <gemxpressorad>\conf directory for OCF initialization (initOCF)
-		//OCF automatically search the opencard.properties file in the user.dir (current) directory.
-		System.setProperty ("user.dir" , System.getProperty ("gemplus.gemxpresso.rad.home.conf"));
-		
-		System.out.println ("----- start of COACardInterface client application -----");
-		
-		// initialise OCF layer
-		client.initOCF ();
-		
-		client.initListApplet ();
-		
-		// free OCF layer
-		client.stopOCF ();
-		
-		System.out.println ("----- end of COACardInterface client application -----");
-		// terminate client application normally
-		java.lang.System.exit (0);
+
+		stopOCF ();
+
+		System.out.println ("COACardInterface stoped");
 	}
-	
+
 	private String bytesToString (byte [] b, int len)
 	{
 		byte [] c = new byte [len];
@@ -451,4 +330,4 @@
 		}
 		return new String (c);
 	}
-}
+}
\ No newline at end of file

Added: trunk/src/fr/umlv/coa/javacard/COAJavaCardListener.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COAJavaCardListener.java	2005-02-20 18:50:01 UTC (rev 6)
+++ trunk/src/fr/umlv/coa/javacard/COAJavaCardListener.java	2005-02-20 22:44:23 UTC (rev 7)
@@ -0,0 +1,62 @@
+/*
+ * File : COAJavaCardListener.java Created : 20 f?vr. 2005
+ * ======================================= BOSS PROJECT
+ * ("http://boss.berlios.de") =======================================
+ */
+
+package fr.umlv.coa.javacard;
+
+import opencard.core.event.CTListener;
+import opencard.core.event.CardTerminalEvent;
+import opencard.core.service.SmartCard;
+import opencard.core.terminal.CardTerminal;
+import opencard.core.terminal.CardTerminalException;
+
+
+/**
+ */
+public class COAJavaCardListener implements CTListener
+{
+	private SmartCard		smartcard	= null;
+	private CardTerminal	terminal	= null;
+	private int				slotID		= 0;
+
+	/**
+	 * @see opencard.core.event.CTListener#cardInserted(opencard.core.event.CardTerminalEvent)
+	 */
+	public void cardInserted (CardTerminalEvent event) throws CardTerminalException
+	{
+		if (smartcard == null)
+		{
+			try
+			{
+				smartcard = SmartCard.getSmartCard (event);
+				terminal = event.getCardTerminal ();
+				slotID = event.getSlotID ();
+
+				COACardInterface.getInstance ().cardInserted (smartcard , terminal , slotID);
+
+			}
+			catch (Exception e)
+			{
+				e.printStackTrace ();
+			}
+		}
+	}
+
+	/**
+	 * @see opencard.core.event.CTListener#cardRemoved(opencard.core.event.CardTerminalEvent)
+	 */
+	public void cardRemoved (CardTerminalEvent event) throws CardTerminalException
+	{
+		if ((event.getSlotID () == slotID) && (event.getCardTerminal () == terminal))
+		{
+			smartcard = null;
+			terminal = null;
+			slotID = 0;
+
+			COACardInterface.getInstance ().cardRemoved ();
+		}
+	}
+
+}
\ No newline at end of file



From leny at sheep.berlios.de  Mon Feb 21 00:34:35 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Mon, 21 Feb 2005 00:34:35 +0100
Subject: [Coa-svn] r8 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502202334.j1KNYZOT014163@sheep.berlios.de>

Author: leny
Date: 2005-02-21 00:34:16 +0100 (Mon, 21 Feb 2005)
New Revision: 8

Modified:
   trunk/src/fr/umlv/coa/javacard/MonApplet.java
Log:


Modified: trunk/src/fr/umlv/coa/javacard/MonApplet.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/MonApplet.java	2005-02-20 22:44:23 UTC (rev 7)
+++ trunk/src/fr/umlv/coa/javacard/MonApplet.java	2005-02-20 23:34:16 UTC (rev 8)
@@ -1,184 +1,178 @@
-package fr.umlv.coa.javacard;
 
+package lleszko.corba;
+
 import javacard.framework.APDU;
 import javacard.framework.Applet;
 import javacard.framework.ISO7816;
 import javacard.framework.ISOException;
 import javacard.framework.Util;
 
+public class MonApplet extends Applet {
 
-public class MonApplet extends Applet
-{
+	private final static byte CLA_MON_APPLET = (byte)0x91;
+	private final static byte GET_NAME = (byte) 0xFF;
+	private final static byte INS_GET_NAME = (byte) 0x13;
+	private final static byte INS_GET_NUMBER = (byte) 0x14;
+	private final static byte INS_DESC = (byte) 0xFD;
+	private final static byte INS_LIST_INS = (byte) 0xFE;
+	private final static byte [] DESC_OK = {(byte)0x12, (byte)0x03};
+	private final static byte [] DESC_NOK = {(byte)0x12, (byte)0x04};
+	private final static byte [] LIST_INS = {(byte)INS_GET_NAME, (byte)INS_GET_NUMBER};	
+	private final static byte [] INS_GET_NAME_DESC = {(byte)'g', (byte)'e',(byte)'t',(byte)'N',(byte)'a',(byte)'m',(byte)'e'};
+	private final static byte [] INS_GET_NUMBER_DESC = {(byte)'g', (byte)'e',(byte)'t',(byte)'N',(byte)'u',(byte)'m',(byte)'b',(byte)'e',(byte)'r'};
+	private final static byte [] NAME = {(byte)'M', (byte)'o', (byte)'n', (byte)'A', (byte)'p', (byte)'p', (byte)'l', (byte)'e', (byte)'t' };
 	
-	private final static byte		CLA_MON_APPLET		= (byte) 0x91;
-	private final static byte		INS_GET_NAME		= (byte) 0x13;
-	private final static byte		INS_GET_NUMBER		= (byte) 0x14;
-	private final static byte		INS_DESC			= (byte) 0xFE;
-	private final static byte		INS_LIST_INS		= (byte) 0xFF;
-	private final static byte []	DESC_OK				= {(byte) 0x12, (byte) 0x03};
-	private final static byte []	DESC_NOK			= {(byte) 0x12, (byte) 0x04};
-	private final static byte []	LIST_INS			= {(byte) INS_GET_NAME, (byte) INS_GET_NUMBER};
-	private final static byte []	INS_GET_NAME_DESC	= {(byte) 'g', (byte) 'e', (byte) 't', (byte) 'N', (byte) 'a', (byte) 'm', (byte) 'e'};
-	private final static byte []	INS_GET_NUMBER_DESC	= {(byte) 'g', (byte) 'e', (byte) 't', (byte) 'N', (byte) 'u', (byte) 'm', (byte) 'b', (byte) 'e', (byte) 'r'};
-	
 	/**
 	 * 
 	 */
-	public MonApplet (byte [] buffer, short offset, byte length)
-	{
-		register ();
+	public MonApplet(byte [] buffer, short offset, byte length) {
+			register();
 	}
 	
-	public static void install (byte [] buffer, short offset, byte length)
+	public static void install(byte[] buffer, short offset, byte length)
 	{
-		new MonApplet (buffer, offset, length);
-		
+		new MonApplet(buffer, offset, length);
+
+
 	}
-	
-	/**
+	/* (non-Javadoc)
 	 * @see javacard.framework.Applet#process(javacard.framework.APDU)
 	 */
-	public void process (APDU apdu) throws ISOException
-	{
-		byte [] apduBuffer = apdu.getBuffer ();
+	public void process(APDU arg0) throws ISOException {
 		
-		if (apduBuffer [ISO7816.OFFSET_CLA] == CLA_MON_APPLET)
+		byte [] apduBuffer = arg0.getBuffer();
+		
+		if(apduBuffer[ISO7816.OFFSET_CLA]==CLA_MON_APPLET)
 		{
-			switch (apduBuffer [ISO7816.OFFSET_INS])
+			switch(apduBuffer[ISO7816.OFFSET_INS])
 			{
-				case INS_GET_NAME :
-					getName (apdu);
-					break;
-				case INS_DESC :
-					sendDesc (apdu);
-					break;
-				case INS_LIST_INS :
-					sendListIns (apdu);
-					break;
-				case INS_GET_NUMBER :
-					getNumber (apdu);
-					break;
-				default :
-					ISOException.throwIt (ISO7816.SW_INS_NOT_SUPPORTED);
+			case GET_NAME:
+				sendAppletName(arg0);
+				break;
+			case INS_GET_NAME:
+				getName(arg0);
+				break;
+			case INS_DESC:
+				sendDesc(arg0);
+				break;
+			case INS_LIST_INS:
+				sendListIns(arg0);
+				break;
+			case INS_GET_NUMBER:
+				getNumber(arg0);
+				break;
+			default:
+				ISOException.throwIt(ISO7816.SW_INS_NOT_SUPPORTED);
 			}
 		}
 	}
-	
-	/**
+
+	/* (non-Javadoc)
 	 * @see javacard.framework.Applet#deselect()
 	 */
-	public void deselect ()
-	{
-		super.deselect ();
+	public void deselect() {
+		
+		super.deselect();
 	}
-	
-	/**
+	/* (non-Javadoc)
 	 * @see javacard.framework.Applet#select()
 	 */
-	public boolean select ()
-	{
-		return super.select ();
+	public boolean select() {
+		
+		return super.select();
 	}
-	
-	/**
-	 * @param apdu
-	 */
-	private void getNumber (APDU apdu)
+
+	private void getNumber(APDU apdu)
 	{
-		byte [] apduBuffer = apdu.getBuffer ();
+		byte [] apduBuffer = apdu.getBuffer();
 		
-		apduBuffer [5] = (byte) 0x12;
-		apduBuffer [6] = (byte) 0x03;
+		apduBuffer[5] = (byte)0x12;
+		apduBuffer[6] = (byte)0x03;
 		
-		apdu.setOutgoing ();
+		apdu.setOutgoing();
 		
-		apdu.setOutgoingLength ((short) 2);
+		apdu.setOutgoingLength((short)2);
 		
-		apdu.sendBytes ((short) 5 , (short) 2);
+		apdu.sendBytes((short)5, (short)2);
 	}
 	
-	
-	/**
-	 * @param apdu
-	 */
-	private void getName (APDU apdu)
+	private void getName(APDU apdu)
 	{
-		byte [] apduBuffer = apdu.getBuffer ();
+		byte [] apduBuffer = apdu.getBuffer();
 		
-		apduBuffer [5] = (byte) 'A';
-		apduBuffer [6] = (byte) 'i';
+		apduBuffer[5] = (byte)'A';
+		apduBuffer[6] = (byte)'i';
 		
-		apdu.setOutgoing ();
+		apdu.setOutgoing();
 		
-		apdu.setOutgoingLength ((short) 2);
+		apdu.setOutgoingLength((short)2);
 		
-		apdu.sendBytes ((short) 5 , (short) 2);
+		apdu.sendBytes((short)5, (short)2);
 	}
+
+	private void sendAppletName(APDU apdu)
+	{
+		byte [] buffer = apdu.getBuffer();
+		
+		Util.arrayCopy(DESC_OK, (short)0, buffer, (short)0, (short)2);
+		Util.arrayCopy(NAME, (short)0, buffer, (short)2, (short)NAME.length);
+		
+		apdu.setOutgoing();
+		apdu.setOutgoingLength((short)(2+NAME.length));
+		
+		apdu.sendBytes((short)0, (short)(2+NAME.length));
+	}
 	
-	
-	/**
-	 * @param apdu
-	 */
-	private void sendDesc (APDU apdu)
+	private void sendDesc(APDU apdu)
 	{
-		byte [] buffer = apdu.getBuffer ();
+		byte [] buffer = apdu.getBuffer();
 		
-		switch (buffer [ISO7816.OFFSET_P1])
+		switch(buffer[ISO7816.OFFSET_P1])
 		{
-			case INS_GET_NAME :
-				sendInsDesc (apdu , INS_GET_NAME_DESC , true);
-				break;
-			case INS_GET_NUMBER :
-				sendInsDesc (apdu , INS_GET_NUMBER_DESC , true);
-				break;
-			default :
-				sendInsDesc (apdu , null , false);
+		case	INS_GET_NAME:
+			sendInsDesc(apdu, INS_GET_NAME_DESC, true);
+			break;
+		case	INS_GET_NUMBER:
+			sendInsDesc(apdu, INS_GET_NUMBER_DESC, true);
+			break;
+		default :
+			sendInsDesc(apdu, null, false);
 		}
 	}
-	
-	
-	/**
-	 * @param apdu
-	 */
-	private void sendListIns (APDU apdu)
+
+	private void sendListIns(APDU apdu)
 	{
-		byte [] buffer = apdu.getBuffer ();
+		byte [] buffer = apdu.getBuffer();
 		
-		Util.arrayCopy (DESC_OK , (short) 0 , buffer , (short) 0 , (short) 2);
-		Util.arrayCopy (LIST_INS , (short) 0 , buffer , (short) 2 , (short) LIST_INS.length);
+		Util.arrayCopy(DESC_OK, (short)0, buffer, (short)0, (short)2);
+		Util.arrayCopy(LIST_INS, (short)0, buffer, (short)2, (short)LIST_INS.length);
 		
-		apdu.setOutgoing ();
-		apdu.setOutgoingLength ((short) (2 + LIST_INS.length));
+		apdu.setOutgoing();
+		apdu.setOutgoingLength((short)(2+LIST_INS.length));
 		
-		apdu.sendBytes ((short) 0 , (short) (2 + LIST_INS.length));
+		apdu.sendBytes((short)0, (short)(2+LIST_INS.length));
 	}
 	
-	
-	/**
-	 * @param apdu
-	 * @param desc
-	 * @param ok
-	 */
-	private void sendInsDesc (APDU apdu, byte [] desc, boolean ok)
+	private void sendInsDesc(APDU apdu , byte [] desc, boolean ok)
 	{
-		byte [] buffer = apdu.getBuffer ();
+		byte [] buffer = apdu.getBuffer();
 		short length = 0;
 		
-		if (ok)
+		if(ok)
 		{
-			Util.arrayCopy (DESC_OK , (short) 0 , buffer , (short) 0 , (short) 2);
-			Util.arrayCopy (desc , (short) 0 , buffer , (short) 2 , (short) desc.length);
-			length = (short) (2 + desc.length);
+			Util.arrayCopy(DESC_OK, (short)0, buffer, (short)0, (short)2);
+			Util.arrayCopy(desc, (short)0, buffer, (short)2, (short)desc.length);
+			length = (short)(2+desc.length);
 		}
 		else
 		{
-			Util.arrayCopy (DESC_NOK , (short) 0 , buffer , (short) 0 , (short) 2);
-			length = (short) (2);
+			Util.arrayCopy(DESC_NOK, (short)0, buffer, (short)0, (short)2);
+			length = (short)(2);
 		}
 		
-		apdu.setOutgoing ();
-		apdu.setOutgoingLength (length);
+		apdu.setOutgoing();
+		apdu.setOutgoingLength(length);
 		
-		apdu.sendBytes ((short) 0 , length);
+		apdu.sendBytes((short)0, length);
 	}
 }



From leny at sheep.berlios.de  Mon Feb 21 00:58:04 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Mon, 21 Feb 2005 00:58:04 +0100
Subject: [Coa-svn] r9 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502202358.j1KNw4aX011575@sheep.berlios.de>

Author: leny
Date: 2005-02-21 00:57:56 +0100 (Mon, 21 Feb 2005)
New Revision: 9

Added:
   trunk/src/fr/umlv/coa/javacard/Main.java
Modified:
   trunk/src/fr/umlv/coa/javacard/COACardInterface.java
Log:


Modified: trunk/src/fr/umlv/coa/javacard/COACardInterface.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-20 23:34:16 UTC (rev 8)
+++ trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-20 23:57:56 UTC (rev 9)
@@ -10,6 +10,7 @@
 import opencard.core.event.CTListener;
 import opencard.core.event.EventGenerator;
 import opencard.core.service.CardRequest;
+import opencard.core.service.CardServiceException;
 import opencard.core.service.SmartCard;
 import opencard.core.terminal.CardTerminal;
 import opencard.core.terminal.CardTerminalException;
@@ -23,13 +24,11 @@
 import com.gemplus.opencard.service.op.CardServiceOPException;
 import com.gemplus.opencard.service.op.Result;
 import com.gemplus.opencard.service.op.vop.VOPAuthenticationInput;
-import com.gemplus.opencard.service.op.vop.vop200.CardServiceVOP200;
 import com.gemplus.opencard.service.op.vop.vop211.CardServiceVOP211;
+import com.gemplus.tools.gemxpresso.GemXpressoException;
 import com.gemplus.tools.gemxpresso.GemXpressoService;
 import com.gemplus.tools.gemxpresso.util.GxpSystem;
 
-import fr.umlv.boss.client.util.BOSSErrorListener;
-import fr.umlv.boss.client.util.ErrorManager;
 
 
 class COACardInterface
@@ -72,6 +71,11 @@
 	private final List				listListener		= new ArrayList ();
 
 	private static COACardInterface	INSTANCE			= null;
+	
+	private final static byte		CARD_GET_NAME		= (byte)0xFF;
+	private final static byte		CARD_GET_INS		= (byte)0xFE;
+	private final static byte		CARD_GET_INS_NAME	= (byte)0xFD;
+	
 
 	public COACardInterface ()
 	{
@@ -114,15 +118,36 @@
 	{
 		keyFile = appKeyFile = keyFileDir + File.separator + cardKeyFile;
 
-		serv = (CardServiceOPCore) card.getCardService (CardServiceVOP211.class , true);
-
+		try
+		{
+			serv = (CardServiceOPCore) card.getCardService (CardServiceVOP211.class , true);
+		}
+		catch (Exception e2)
+		{
+			e2.printStackTrace();
+		}
+		
 		serv.setFullCrypto (true);
 
-		libService = new GemXpressoService ();
-		libService.setCardService (serv);
+		try
+		{
+			libService = new GemXpressoService ();
+			libService.setCardService (serv);
+		}
+		catch (GemXpressoException e1)
+		{
+			e1.printStackTrace();
+		}
 
-		serv.warmReset ();
-
+		try
+		{
+			serv.warmReset ();
+		}
+		catch (Exception e)
+		{
+			e.printStackTrace();
+		}
+		
 		VOPAuthenticationInput authenticationInput;
 		authenticationInput = new VOPAuthenticationInput ();
 
@@ -146,7 +171,7 @@
 		}
 		catch (Exception ex)
 		{
-			throw new Exception ("authentication error : " + ex.getMessage ());
+			ex.printStackTrace();
 		}
 	}
 
@@ -181,34 +206,35 @@
 	public void initListApplet ()
 	{
 		Enumeration en = null;
+		if(serv == null)
+		{
+			System.out.println ("Error service unavailable !!!?!?!?");
+			return;
+		}
 
 		try
 		{
 			en = serv.scanCard ();
 		}
-		catch (CardServiceOPException e)
+		catch (Exception e)
 		{
-			// TODO Auto-generated catch block
 			e.printStackTrace ();
 		}
-		catch (CardTerminalException e)
-		{
-			// TODO Auto-generated catch block
-			e.printStackTrace ();
-		}
 
+		if(en != null)
 		while (en.hasMoreElements ())
 		{
 			CardObjectStatus cOS = (CardObjectStatus) en.nextElement ();
 			if (cOS.getCardObjectType () == CardObjectStatus.OBJECT_STATUS_ON_APPLICATION)
 			{
-				appletMap.put (cOS.getAIDAsString () , new AppletCOA (cOS.getAID ()));
-
-				AppletCOA ap = new AppletCOA (cOS.getAID ());
-				makeAppletINSMap (ap);
-				appletMap.put (cOS.getAID ().toString () , ap);
+				//AppletCOA ap = new AppletCOA (cOS.getAID (), getAppletName(cOS.getAID()));
+				//makeAppletINSMap (ap);
+				//appletMap.put (cOS.getAID ().toString () , ap);
+				System.out.println (getAppletName(cOS.getAID()));
 			}
 		}
+		else
+			System.out.println ("No Applet on card");
 	}
 
 	private void makeAppletINSMap (AppletCOA applet)
@@ -265,13 +291,52 @@
 
 		return null;
 	}
+	
+	private String getAppletName (AppletID aid)
+	{
+		try
+		{
+			byte [] aidBuffer = new byte [5];
+			byte [] tmpBuff = new byte [256];
+			int i = 2, j = 0;
+			String appletName = null;
 
+			serv.select (aid);
+
+			aidBuffer [0] = aid.getBytes () [0];
+			aidBuffer [1] = CARD_GET_NAME;
+			aidBuffer [2] = (byte) 0x00;
+			aidBuffer [3] = (byte) 0x00;
+			aidBuffer [4] = (byte) 0x00;
+
+			ResponseAPDU response = serv.sendAPDU (aidBuffer);
+
+			byte [] desc = response.getBuffer();
+			
+			if ((desc.length < 2) || (desc [0] != 0x12) || (desc [1] != 0x03))
+				return null;
+
+			for (; desc [i] != (byte)0x90 && desc [i+1] != (byte)0x00 ; i++, j++)
+					tmpBuff [j] = desc [i];
+
+			return bytesToString (tmpBuff , (int) j);
+		}
+		catch (Exception e)
+		{
+			e.printStackTrace ();
+		}
+
+		return null;
+	}
+
 	public void cardInserted (SmartCard card, CardTerminal terminal, int slotId)
 	{
 		this.card = card;
 		this.terminal = terminal;
 		this.slotId = slotId;
 
+		System.out.println ("Card Inserted !");
+		
 		initListApplet ();
 
 		fireCardInserted ();
@@ -279,22 +344,38 @@
 
 	public void cardRemoved ()
 	{
+		System.out.println ("Card Removed !");
+		
 		fireCardRemoved ();
 	}
 
 	private void fireCardInserted ()
 	{
-		for (Iterator i = listListener.iterator (); i.hasNext ();)
-			((CTListener) i.next ()).cardInserted (null);
+		try
+		{
+			for (Iterator i = listListener.iterator (); i.hasNext ();)
+				((CTListener) i.next ()).cardInserted (null);
+		}
+		catch (CardTerminalException e)
+		{
+			e.printStackTrace();
+		}
 	}
 
 	private void fireCardRemoved ()
 	{
-		for (Iterator i = listListener.iterator (); i.hasNext ();)
-			((CTListener) i.next ()).cardRemoved (null);
+		try
+		{
+			for (Iterator i = listListener.iterator (); i.hasNext ();)
+				((CTListener) i.next ()).cardRemoved (null);
+		}
+		catch (CardTerminalException e)
+		{
+			e.printStackTrace();
+		}
 	}
 
-	public void init (String [] argv)
+	public void init ()
 	{
 		GxpSystem.getInstance ().setRadHome (homeDir);
 
@@ -308,7 +389,9 @@
 
 		EventGenerator.getGenerator ().addCTListener (new COAJavaCardListener ());
 
-		while (true)
+		boolean stop = true;
+		
+		while (stop)
 		{
 
 		}

Added: trunk/src/fr/umlv/coa/javacard/Main.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/Main.java	2005-02-20 23:34:16 UTC (rev 8)
+++ trunk/src/fr/umlv/coa/javacard/Main.java	2005-02-20 23:57:56 UTC (rev 9)
@@ -0,0 +1,26 @@
+/* 
+ * File    : Main.java
+ * Created : 21 f?vr. 2005
+ * 
+ * =======================================
+ * COA PROJECT ("http://coa.berlios.de")
+ * =======================================
+ *
+ */
+
+package fr.umlv.coa.javacard;
+
+/**
+ * @author Administrateur
+ *
+ */
+public class Main
+{
+
+	public static void main (String [] args)
+	{
+		COACardInterface i = COACardInterface.getInstance();
+		
+		i.init();		
+	}
+}



From leny at sheep.berlios.de  Mon Feb 21 01:08:31 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Mon, 21 Feb 2005 01:08:31 +0100
Subject: [Coa-svn] r10 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502210008.j1L08Vb9012027@sheep.berlios.de>

Author: leny
Date: 2005-02-21 01:08:15 +0100 (Mon, 21 Feb 2005)
New Revision: 10

Modified:
   trunk/src/fr/umlv/coa/javacard/COACardInterface.java
Log:


Modified: trunk/src/fr/umlv/coa/javacard/COACardInterface.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-20 23:57:56 UTC (rev 9)
+++ trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-21 00:08:15 UTC (rev 10)
@@ -30,7 +30,6 @@
 import com.gemplus.tools.gemxpresso.util.GxpSystem;
 
 
-
 class COACardInterface
 {
 
@@ -71,12 +70,11 @@
 	private final List				listListener		= new ArrayList ();
 
 	private static COACardInterface	INSTANCE			= null;
-	
-	private final static byte		CARD_GET_NAME		= (byte)0xFF;
-	private final static byte		CARD_GET_INS		= (byte)0xFE;
-	private final static byte		CARD_GET_INS_NAME	= (byte)0xFD;
-	
 
+	private final static byte		CARD_GET_NAME		= (byte) 0xFF;
+	private final static byte		CARD_GET_INS		= (byte) 0xFE;
+	private final static byte		CARD_GET_INS_NAME	= (byte) 0xFD;
+
 	public COACardInterface ()
 	{
 	}
@@ -116,6 +114,8 @@
 
 	private void authentication ()
 	{
+		System.out.println ("Authentication ...");
+
 		keyFile = appKeyFile = keyFileDir + File.separator + cardKeyFile;
 
 		try
@@ -124,9 +124,9 @@
 		}
 		catch (Exception e2)
 		{
-			e2.printStackTrace();
+			e2.printStackTrace ();
 		}
-		
+
 		serv.setFullCrypto (true);
 
 		try
@@ -136,7 +136,7 @@
 		}
 		catch (GemXpressoException e1)
 		{
-			e1.printStackTrace();
+			e1.printStackTrace ();
 		}
 
 		try
@@ -145,9 +145,9 @@
 		}
 		catch (Exception e)
 		{
-			e.printStackTrace();
+			e.printStackTrace ();
 		}
-		
+
 		VOPAuthenticationInput authenticationInput;
 		authenticationInput = new VOPAuthenticationInput ();
 
@@ -171,8 +171,10 @@
 		}
 		catch (Exception ex)
 		{
-			ex.printStackTrace();
+			ex.printStackTrace ();
 		}
+
+		System.out.println ("Succeed.");
 	}
 
 	private void printAvailableTerminals ()
@@ -205,8 +207,10 @@
 
 	public void initListApplet ()
 	{
+		authentication ();
+
 		Enumeration en = null;
-		if(serv == null)
+		if (serv == null)
 		{
 			System.out.println ("Error service unavailable !!!?!?!?");
 			return;
@@ -214,6 +218,7 @@
 
 		try
 		{
+			System.out.println ("Listing Applets ...");
 			en = serv.scanCard ();
 		}
 		catch (Exception e)
@@ -221,18 +226,23 @@
 			e.printStackTrace ();
 		}
 
-		if(en != null)
-		while (en.hasMoreElements ())
-		{
-			CardObjectStatus cOS = (CardObjectStatus) en.nextElement ();
-			if (cOS.getCardObjectType () == CardObjectStatus.OBJECT_STATUS_ON_APPLICATION)
+		if (en != null)
+			while (en.hasMoreElements ())
 			{
-				//AppletCOA ap = new AppletCOA (cOS.getAID (), getAppletName(cOS.getAID()));
-				//makeAppletINSMap (ap);
-				//appletMap.put (cOS.getAID ().toString () , ap);
-				System.out.println (getAppletName(cOS.getAID()));
+				CardObjectStatus cOS = (CardObjectStatus) en.nextElement ();
+				if (cOS.getCardObjectType () == CardObjectStatus.OBJECT_STATUS_ON_APPLICATION)
+				{
+					String name = getAppletName (cOS.getAID ());
+					if (name != null)
+					{
+						System.out.println ("\"Introspection\" on " + name);
+
+						//AppletCOA ap = new AppletCOA (cOS.getAID (),
+						//makeAppletINSMap (ap);
+						//appletMap.put (cOS.getAID ().toString () , ap);
+					}
+				}
 			}
-		}
 		else
 			System.out.println ("No Applet on card");
 	}
@@ -291,7 +301,7 @@
 
 		return null;
 	}
-	
+
 	private String getAppletName (AppletID aid)
 	{
 		try
@@ -311,13 +321,13 @@
 
 			ResponseAPDU response = serv.sendAPDU (aidBuffer);
 
-			byte [] desc = response.getBuffer();
-			
+			byte [] desc = response.getBuffer ();
+
 			if ((desc.length < 2) || (desc [0] != 0x12) || (desc [1] != 0x03))
 				return null;
 
-			for (; desc [i] != (byte)0x90 && desc [i+1] != (byte)0x00 ; i++, j++)
-					tmpBuff [j] = desc [i];
+			for (; desc [i] != (byte) 0x90 && desc [i + 1] != (byte) 0x00; i++, j++)
+				tmpBuff [j] = desc [i];
 
 			return bytesToString (tmpBuff , (int) j);
 		}
@@ -336,7 +346,7 @@
 		this.slotId = slotId;
 
 		System.out.println ("Card Inserted !");
-		
+
 		initListApplet ();
 
 		fireCardInserted ();
@@ -345,7 +355,7 @@
 	public void cardRemoved ()
 	{
 		System.out.println ("Card Removed !");
-		
+
 		fireCardRemoved ();
 	}
 
@@ -358,7 +368,7 @@
 		}
 		catch (CardTerminalException e)
 		{
-			e.printStackTrace();
+			e.printStackTrace ();
 		}
 	}
 
@@ -371,7 +381,7 @@
 		}
 		catch (CardTerminalException e)
 		{
-			e.printStackTrace();
+			e.printStackTrace ();
 		}
 	}
 
@@ -390,7 +400,7 @@
 		EventGenerator.getGenerator ().addCTListener (new COAJavaCardListener ());
 
 		boolean stop = true;
-		
+
 		while (stop)
 		{
 



From leny at sheep.berlios.de  Mon Feb 21 01:21:43 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Mon, 21 Feb 2005 01:21:43 +0100
Subject: [Coa-svn] r11 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502210021.j1L0Lhes021465@sheep.berlios.de>

Author: leny
Date: 2005-02-21 01:21:32 +0100 (Mon, 21 Feb 2005)
New Revision: 11

Modified:
   trunk/src/fr/umlv/coa/javacard/COACardInterface.java
Log:


Modified: trunk/src/fr/umlv/coa/javacard/COACardInterface.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-21 00:08:15 UTC (rev 10)
+++ trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-21 00:21:32 UTC (rev 11)
@@ -236,10 +236,9 @@
 					if (name != null)
 					{
 						System.out.println ("\"Introspection\" on " + name);
-
-						//AppletCOA ap = new AppletCOA (cOS.getAID (),
-						//makeAppletINSMap (ap);
-						//appletMap.put (cOS.getAID ().toString () , ap);
+						AppletCOA ap = new AppletCOA (cOS.getAID (), name);
+						makeAppletINSMap (ap);
+						appletMap.put (cOS.getAID ().toString () , ap);
 					}
 				}
 			}
@@ -257,21 +256,15 @@
 
 		while (desc [i] != (byte) 0x90 && desc [i + 1] != (byte) 0x0)
 		{
-			byte [] tmpBuff = new byte [256];
-			String insName = null;
-			byte ins = 0;
-			int j = 0;
+			byte instructionByte = desc[i];
+			
+			String instructionName = getInstructionName(applet.getAid(), instructionByte);
+			
+			System.out.println ("\t Found "+instructionName + " - "+instructionByte);
 
-			for (j = 0; desc [i] != 00; i++, j++)
-				tmpBuff [j] = desc [i];
-
-			ins = desc [++i];
-
+			applet.addINS (instructionByte , instructionName);
+			
 			i++;
-
-			insName = bytesToString (tmpBuff , (int) j);
-
-			applet.addINS (ins , insName);
 		}
 	}
 
@@ -284,7 +277,7 @@
 			serv.select (aid);
 
 			aidBuffer [0] = aid.getBytes () [0];
-			aidBuffer [1] = (byte) 0xFF;
+			aidBuffer [1] = CARD_GET_INS;
 			aidBuffer [2] = (byte) 0x00;
 			aidBuffer [3] = (byte) 0x00;
 			aidBuffer [4] = (byte) 0x00;
@@ -339,6 +332,43 @@
 		return null;
 	}
 
+	private String getInstructionName (AppletID aid, byte instructionByte)
+	{
+		try
+		{
+			byte [] aidBuffer = new byte [5];
+			byte [] tmpBuff = new byte [256];
+			int i = 2, j = 0;
+			String appletName = null;
+
+			//serv.select (aid);
+
+			aidBuffer [0] = aid.getBytes () [0];
+			aidBuffer [1] = CARD_GET_INS_NAME;
+			aidBuffer [2] = instructionByte;
+			aidBuffer [3] = (byte) 0x00;
+			aidBuffer [4] = (byte) 0x00;
+
+			ResponseAPDU response = serv.sendAPDU (aidBuffer);
+
+			byte [] desc = response.getBuffer ();
+
+			if ((desc.length < 2) || (desc [0] != 0x12) || (desc [1] != 0x03))
+				return null;
+
+			for (; desc [i] != (byte) 0x90 && desc [i + 1] != (byte) 0x00; i++, j++)
+				tmpBuff [j] = desc [i];
+
+			return bytesToString (tmpBuff , (int) j);
+		}
+		catch (Exception e)
+		{
+			e.printStackTrace ();
+		}
+
+		return null;
+	}
+	
 	public void cardInserted (SmartCard card, CardTerminal terminal, int slotId)
 	{
 		this.card = card;



From leny at sheep.berlios.de  Mon Feb 21 01:26:30 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Mon, 21 Feb 2005 01:26:30 +0100
Subject: [Coa-svn] r12 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502210026.j1L0QUdi027868@sheep.berlios.de>

Author: leny
Date: 2005-02-21 01:26:11 +0100 (Mon, 21 Feb 2005)
New Revision: 12

Modified:
   trunk/src/fr/umlv/coa/javacard/COACardInterface.java
   trunk/src/fr/umlv/coa/javacard/Main.java
Log:


Modified: trunk/src/fr/umlv/coa/javacard/COACardInterface.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-21 00:21:32 UTC (rev 11)
+++ trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-21 00:26:11 UTC (rev 12)
@@ -9,19 +9,15 @@
 
 import opencard.core.event.CTListener;
 import opencard.core.event.EventGenerator;
-import opencard.core.service.CardRequest;
-import opencard.core.service.CardServiceException;
 import opencard.core.service.SmartCard;
 import opencard.core.terminal.CardTerminal;
 import opencard.core.terminal.CardTerminalException;
 import opencard.core.terminal.CardTerminalRegistry;
-import opencard.core.terminal.CommandAPDU;
 import opencard.core.terminal.ResponseAPDU;
 import opencard.opt.applet.AppletID;
 
 import com.gemplus.opencard.service.op.CardObjectStatus;
 import com.gemplus.opencard.service.op.CardServiceOPCore;
-import com.gemplus.opencard.service.op.CardServiceOPException;
 import com.gemplus.opencard.service.op.Result;
 import com.gemplus.opencard.service.op.vop.VOPAuthenticationInput;
 import com.gemplus.opencard.service.op.vop.vop211.CardServiceVOP211;
@@ -341,8 +337,6 @@
 			int i = 2, j = 0;
 			String appletName = null;
 
-			//serv.select (aid);
-
 			aidBuffer [0] = aid.getBytes () [0];
 			aidBuffer [1] = CARD_GET_INS_NAME;
 			aidBuffer [2] = instructionByte;

Modified: trunk/src/fr/umlv/coa/javacard/Main.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/Main.java	2005-02-21 00:21:32 UTC (rev 11)
+++ trunk/src/fr/umlv/coa/javacard/Main.java	2005-02-21 00:26:11 UTC (rev 12)
@@ -11,7 +11,6 @@
 package fr.umlv.coa.javacard;
 
 /**
- * @author Administrateur
  *
  */
 public class Main
@@ -23,4 +22,4 @@
 		
 		i.init();		
 	}
-}
+}
\ No newline at end of file



From leny at sheep.berlios.de  Mon Feb 21 01:46:09 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Mon, 21 Feb 2005 01:46:09 +0100
Subject: [Coa-svn] r13 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502210046.j1L0k9lK010954@sheep.berlios.de>

Author: leny
Date: 2005-02-21 01:45:36 +0100 (Mon, 21 Feb 2005)
New Revision: 13

Modified:
   trunk/src/fr/umlv/coa/javacard/AppletCOA.java
   trunk/src/fr/umlv/coa/javacard/COACardInterface.java
Log:
bon une premiere version qui pourrait etre fonctionnelle

Modified: trunk/src/fr/umlv/coa/javacard/AppletCOA.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/AppletCOA.java	2005-02-21 00:26:11 UTC (rev 12)
+++ trunk/src/fr/umlv/coa/javacard/AppletCOA.java	2005-02-21 00:45:36 UTC (rev 13)
@@ -47,7 +47,12 @@
 	 */
 	public byte getINS (String name)
 	{
-		return ((Byte) mapINS.get (name)).byteValue ();
+		Byte insByte = (Byte) mapINS.get (name);
+		
+		if(insByte==null)
+			return (byte)0xFF;
+		
+		return insByte.byteValue ();
 	}
 
 	/**

Modified: trunk/src/fr/umlv/coa/javacard/COACardInterface.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-21 00:26:11 UTC (rev 12)
+++ trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-21 00:45:36 UTC (rev 13)
@@ -14,10 +14,12 @@
 import opencard.core.terminal.CardTerminalException;
 import opencard.core.terminal.CardTerminalRegistry;
 import opencard.core.terminal.ResponseAPDU;
+import opencard.core.util.HexString;
 import opencard.opt.applet.AppletID;
 
 import com.gemplus.opencard.service.op.CardObjectStatus;
 import com.gemplus.opencard.service.op.CardServiceOPCore;
+import com.gemplus.opencard.service.op.CardServiceOPException;
 import com.gemplus.opencard.service.op.Result;
 import com.gemplus.opencard.service.op.vop.VOPAuthenticationInput;
 import com.gemplus.opencard.service.op.vop.vop211.CardServiceVOP211;
@@ -234,7 +236,7 @@
 						System.out.println ("\"Introspection\" on " + name);
 						AppletCOA ap = new AppletCOA (cOS.getAID (), name);
 						makeAppletINSMap (ap);
-						appletMap.put (cOS.getAID ().toString () , ap);
+						appletMap.put (name , ap);
 					}
 				}
 			}
@@ -447,4 +449,55 @@
 		}
 		return new String (c);
 	}
+	
+	public byte[] invoke (String appletName, String instructionName)
+	{
+		if((appletMap == null)||(serv == null))
+			return null;
+		
+		AppletCOA applet = (AppletCOA)appletMap.get(appletName);
+		
+		if(applet == null)
+			return null;
+		
+		byte instructionByte = applet.getINS(instructionName);
+		
+		if(instructionByte == (byte)0xFF)
+			return null;
+		
+		byte [] aidBuffer = new byte [5];
+
+		try
+		{
+			System.out.println ("Selecting "+applet.getName());
+			serv.select(applet.getAid());
+		}
+		catch (Exception e1)
+		{
+			e1.printStackTrace();
+		}
+		
+		aidBuffer [0] = applet.getAid().getBytes () [0];
+		aidBuffer [1] = instructionByte;
+		aidBuffer [2] = (byte) 0x00;
+		aidBuffer [3] = (byte) 0x00;
+		aidBuffer [4] = (byte) 0x00;
+
+		ResponseAPDU response = null;
+		
+		try
+		{
+			System.out.println ("Executing "+instructionName);
+			response = serv.sendAPDU (aidBuffer);
+		}
+		catch (CardTerminalException e)
+		{
+			e.printStackTrace();
+		}
+
+		if(response != null)
+			return response.getBuffer();
+		
+		return null;
+	}
 }
\ No newline at end of file



From leny at sheep.berlios.de  Mon Feb 21 13:50:04 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Mon, 21 Feb 2005 13:50:04 +0100
Subject: [Coa-svn] r14 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502211250.j1LCo4wo018497@sheep.berlios.de>

Author: leny
Date: 2005-02-21 13:50:04 +0100 (Mon, 21 Feb 2005)
New Revision: 14

Modified:
   trunk/src/fr/umlv/coa/javacard/COACardInterface.java
Log:


Modified: trunk/src/fr/umlv/coa/javacard/COACardInterface.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-21 00:45:36 UTC (rev 13)
+++ trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-21 12:50:04 UTC (rev 14)
@@ -382,6 +382,12 @@
 	{
 		System.out.println ("Card Removed !");
 
+		card = null;
+		terminal = null;
+		slotId = 0;
+		
+		appletMap.clear();
+		
 		fireCardRemoved ();
 	}
 



From leny at sheep.berlios.de  Mon Feb 21 14:39:46 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Mon, 21 Feb 2005 14:39:46 +0100
Subject: [Coa-svn] r15 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502211339.j1LDdk7W022851@sheep.berlios.de>

Author: leny
Date: 2005-02-21 14:39:42 +0100 (Mon, 21 Feb 2005)
New Revision: 15

Modified:
   trunk/src/fr/umlv/coa/javacard/COACardInterface.java
   trunk/src/fr/umlv/coa/javacard/Main.java
Log:


Modified: trunk/src/fr/umlv/coa/javacard/COACardInterface.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-21 12:50:04 UTC (rev 14)
+++ trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-21 13:39:42 UTC (rev 15)
@@ -95,7 +95,7 @@
 		return listListener.remove (l);
 	}
 
-	public void initOCF ()
+	private void initOCF ()
 	{
 		try
 		{
@@ -190,7 +190,7 @@
 		}
 	}
 
-	public void stopOCF ()
+	private void stopOCF ()
 	{
 		try
 		{
@@ -203,7 +203,7 @@
 		}
 	}
 
-	public void initListApplet ()
+	private void initListApplet ()
 	{
 		authentication ();
 
@@ -430,14 +430,10 @@
 		initOCF ();
 
 		EventGenerator.getGenerator ().addCTListener (new COAJavaCardListener ());
-
-		boolean stop = true;
-
-		while (stop)
-		{
-
-		}
-
+	}
+	
+	public void stop()
+	{
 		stopOCF ();
 
 		System.out.println ("COACardInterface stoped");

Modified: trunk/src/fr/umlv/coa/javacard/Main.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/Main.java	2005-02-21 12:50:04 UTC (rev 14)
+++ trunk/src/fr/umlv/coa/javacard/Main.java	2005-02-21 13:39:42 UTC (rev 15)
@@ -20,6 +20,15 @@
 	{
 		COACardInterface i = COACardInterface.getInstance();
 		
-		i.init();		
+		i.init();	
+		
+		boolean stop = false;
+		
+		while (!stop)
+		{
+			
+		}
+		
+		i.stop();
 	}
 }
\ No newline at end of file



From leny at sheep.berlios.de  Mon Feb 21 14:42:42 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Mon, 21 Feb 2005 14:42:42 +0100
Subject: [Coa-svn] r16 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502211342.j1LDggUb023318@sheep.berlios.de>

Author: leny
Date: 2005-02-21 14:42:42 +0100 (Mon, 21 Feb 2005)
New Revision: 16

Modified:
   trunk/src/fr/umlv/coa/javacard/COACardInterface.java
Log:
tient j'avais oublie le truc qui renvoit l'appletmap ... c'est genant

Modified: trunk/src/fr/umlv/coa/javacard/COACardInterface.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-21 13:39:42 UTC (rev 15)
+++ trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-21 13:42:42 UTC (rev 16)
@@ -110,6 +110,11 @@
 		}
 	}
 
+	public TreeMap getAppletMap ()
+	{
+		return appletMap;
+	}
+	
 	private void authentication ()
 	{
 		System.out.println ("Authentication ...");



From leny at sheep.berlios.de  Tue Feb 22 12:38:03 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Tue, 22 Feb 2005 12:38:03 +0100
Subject: [Coa-svn] r17 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502221138.j1MBc3Xu032076@sheep.berlios.de>

Author: leny
Date: 2005-02-22 12:37:37 +0100 (Tue, 22 Feb 2005)
New Revision: 17

Modified:
   trunk/src/fr/umlv/coa/javacard/COACardInterface.java
Log:


Modified: trunk/src/fr/umlv/coa/javacard/COACardInterface.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-21 13:42:42 UTC (rev 16)
+++ trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-22 11:37:37 UTC (rev 17)
@@ -457,7 +457,7 @@
 		return new String (c);
 	}
 	
-	public byte[] invoke (String appletName, String instructionName)
+	public byte[] invoke (String appletName, String instructionName, byte [] arg)
 	{
 		if((appletMap == null)||(serv == null))
 			return null;
@@ -472,7 +472,11 @@
 		if(instructionByte == (byte)0xFF)
 			return null;
 		
-		byte [] aidBuffer = new byte [5];
+		byte lengthArg = 0;
+		if(arg != null)
+			lengthArg = (byte)arg.length;
+		
+		byte [] aidBuffer = new byte [5+lengthArg];
 
 		try
 		{
@@ -488,8 +492,11 @@
 		aidBuffer [1] = instructionByte;
 		aidBuffer [2] = (byte) 0x00;
 		aidBuffer [3] = (byte) 0x00;
-		aidBuffer [4] = (byte) 0x00;
+		aidBuffer [4] = (byte) lengthArg;
 
+		if(lengthArg != 0)
+			System.arraycopy(arg, 0, aidBuffer, 5, lengthArg);
+		
 		ResponseAPDU response = null;
 		
 		try



From leny at sheep.berlios.de  Tue Feb 22 17:21:08 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Tue, 22 Feb 2005 17:21:08 +0100
Subject: [Coa-svn] r18 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502221621.j1MGL8hm000897@sheep.berlios.de>

Author: leny
Date: 2005-02-22 17:21:07 +0100 (Tue, 22 Feb 2005)
New Revision: 18

Modified:
   trunk/src/fr/umlv/coa/javacard/COACardInterface.java
Log:


Modified: trunk/src/fr/umlv/coa/javacard/COACardInterface.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-22 11:37:37 UTC (rev 17)
+++ trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-22 16:21:07 UTC (rev 18)
@@ -472,11 +472,18 @@
 		if(instructionByte == (byte)0xFF)
 			return null;
 		
+		byte [] aidBuffer;
 		byte lengthArg = 0;
 		if(arg != null)
+		{
 			lengthArg = (byte)arg.length;
-		
-		byte [] aidBuffer = new byte [5+lengthArg];
+			aidBuffer = new byte [5+lengthArg];
+			System.arraycopy(arg, 0, aidBuffer, 5, lengthArg);
+		}
+		else
+		{
+			aidBuffer = new byte [5];
+		}
 
 		try
 		{
@@ -494,8 +501,6 @@
 		aidBuffer [3] = (byte) 0x00;
 		aidBuffer [4] = (byte) lengthArg;
 
-		if(lengthArg != 0)
-			System.arraycopy(arg, 0, aidBuffer, 5, lengthArg);
 		
 		ResponseAPDU response = null;
 		



From ludo93500 at sheep.berlios.de  Thu Feb 24 17:10:13 2005
From: ludo93500 at sheep.berlios.de (Ludovic at BerliOS)
Date: Thu, 24 Feb 2005 17:10:13 +0100
Subject: [Coa-svn] r20 - trunk
Message-ID: <200502241610.j1OGADvv003212@sheep.berlios.de>

Author: ludo93500
Date: 2005-02-24 17:10:12 +0100 (Thu, 24 Feb 2005)
New Revision: 20

Modified:
   trunk/.classpath
Log:


Modified: trunk/.classpath
===================================================================
--- trunk/.classpath	2005-02-24 16:05:17 UTC (rev 19)
+++ trunk/.classpath	2005-02-24 16:10:12 UTC (rev 20)
@@ -3,41 +3,38 @@
 	<classpathentry kind="src" path="src"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
 	<classpathentry kind="src" path="test"/>
-	<classpathentry kind="lib" path="lib/gemplus-terminals.jar"/>
-	<classpathentry kind="lib" path="lib/migterminals.jar"/>
-	<classpathentry kind="lib" path="lib/pcsc-wrapper-src.jar"/>
-	<classpathentry kind="lib" path="lib/reference-services.jar"/>
-	<classpathentry kind="lib" path="lib/reference-terminals-windows.jar"/>
-	<classpathentry kind="lib" path="lib/rejar-tool.jar"/>
-	<classpathentry kind="lib" path="lib/base-core.jar"/>
-	<classpathentry kind="lib" path="lib/base-opt.jar"/>
-	<classpathentry kind="lib" path="lib/apduio.jar"/>
-	<classpathentry kind="lib" path="lib/apdutool.jar"/>
-	<classpathentry kind="lib" path="lib/api21.jar"/>
-	<classpathentry kind="lib" path="lib/capdump.jar"/>
-	<classpathentry kind="lib" path="lib/converter.jar"/>
-	<classpathentry kind="lib" path="lib/jcwde.jar"/>
-	<classpathentry kind="lib" path="lib/offcardverifier.jar"/>
-	<classpathentry kind="lib" path="lib/scriptgen.jar"/>
-	<classpathentry kind="lib" path="lib/vopcardservice.jar"/>
-	<classpathentry kind="lib" path="lib/cryptix-gemxpresso.jar"/>
-	<classpathentry kind="lib" path="lib/cryptix-gemxpresso-is.jar"/>
-	<classpathentry kind="lib" path="lib/gemplus-rad-terminals.jar"/>
-	<classpathentry kind="lib" path="lib/gemplus-util.jar"/>
-	<classpathentry kind="lib" path="lib/gemxpresso-filemanager.jar"/>
-	<classpathentry kind="lib" path="lib/cmdgxp211_pk.jar"/>
-	<classpathentry kind="lib" path="lib/cmdgxp211v1.jar"/>
-	<classpathentry kind="lib" path="lib/cmdgxp211v2.jar"/>
-	<classpathentry kind="lib" path="lib/cryptix-jce-api.jar"/>
-	<classpathentry kind="lib" path="lib/gcf2gxcfconverter.jar"/>
-	<classpathentry kind="lib" path="lib/gsecardservice.jar"/>
-	<classpathentry kind="lib" path="lib/gxpconverter.jar"/>
-	<classpathentry kind="lib" path="lib/gxpproject.jar"/>
-	<classpathentry kind="lib" path="lib/gxputil.jar"/>
-	<classpathentry kind="lib" path="lib/pcsc_wrapper.jar"/>
-	<classpathentry kind="lib" path="lib/gemxpresso.jar"/>
 	<classpathentry kind="src" path="generated"/>
-	<classpathentry kind="lib" path="lib/idl.jar"/>
-	<classpathentry kind="lib" path="lib/logkit-1.2.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/capdump.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/cmdgxp211_pk.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/cmdgxp211v1.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/cmdgxp211v2.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/converter.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/cryptix-gemxpresso.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/cryptix-gemxpresso-is.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/cryptix-jce-api.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/gcf2gxcfconverter.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/gemplus-rad-terminals.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/gemplus-terminals.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/gemplus-util.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/gemxpresso.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/gemxpresso-filemanager.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/gsecardservice.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/gxpconverter.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/gxpproject.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/gxputil.jar"/>
+	<classpathentry kind="lib" path="gemplus_lib/vopcardservice.jar"/>
+	<classpathentry kind="lib" path="lib/javacard/apduio.jar"/>
+	<classpathentry kind="lib" path="lib/opencard/base-core.jar"/>
+	<classpathentry kind="lib" path="lib/javacard/apdutool.jar"/>
+	<classpathentry kind="lib" path="lib/javacard/api21.jar"/>
+	<classpathentry kind="lib" path="lib/javacard/jcwde.jar"/>
+	<classpathentry kind="lib" path="lib/javacard/offcardverifier.jar"/>
+	<classpathentry kind="lib" path="lib/javacard/scriptgen.jar"/>
+	<classpathentry kind="lib" path="lib/opencard/base-opt.jar"/>
+	<classpathentry kind="lib" path="lib/opencard/migterminals.jar"/>
+	<classpathentry kind="lib" path="lib/opencard/pcsc-wrapper-src.jar"/>
+	<classpathentry kind="lib" path="lib/opencard/reference-services.jar"/>
+	<classpathentry kind="lib" path="lib/opencard/reference-terminals-windows.jar"/>
+	<classpathentry kind="lib" path="lib/opencard/rejar-tool.jar"/>
 	<classpathentry kind="output" path="classes"/>
 </classpath>



From ludo93500 at sheep.berlios.de  Thu Feb 24 17:11:15 2005
From: ludo93500 at sheep.berlios.de (Ludovic at BerliOS)
Date: Thu, 24 Feb 2005 17:11:15 +0100
Subject: [Coa-svn] r21 - trunk
Message-ID: <200502241611.j1OGBFuS003358@sheep.berlios.de>

Author: ludo93500
Date: 2005-02-24 17:11:14 +0100 (Thu, 24 Feb 2005)
New Revision: 21

Removed:
   trunk/test/
Log:




From ludo93500 at sheep.berlios.de  Thu Feb 24 17:11:34 2005
From: ludo93500 at sheep.berlios.de (Ludovic at BerliOS)
Date: Thu, 24 Feb 2005 17:11:34 +0100
Subject: [Coa-svn] r22 - trunk
Message-ID: <200502241611.j1OGBYu9003390@sheep.berlios.de>

Author: ludo93500
Date: 2005-02-24 17:11:33 +0100 (Thu, 24 Feb 2005)
New Revision: 22

Removed:
   trunk/bordel_en_attendant/
Log:




From ludo93500 at sheep.berlios.de  Thu Feb 24 17:14:05 2005
From: ludo93500 at sheep.berlios.de (Ludovic at BerliOS)
Date: Thu, 24 Feb 2005 17:14:05 +0100
Subject: [Coa-svn] r23 - in trunk/src/fr/umlv/coa: corba javacard
Message-ID: <200502241614.j1OGE5h1003541@sheep.berlios.de>

Author: ludo93500
Date: 2005-02-24 17:14:04 +0100 (Thu, 24 Feb 2005)
New Revision: 23

Modified:
   trunk/src/fr/umlv/coa/corba/COA.java
   trunk/src/fr/umlv/coa/corba/CardServant.java
   trunk/src/fr/umlv/coa/javacard/AppletCOA.java
   trunk/src/fr/umlv/coa/javacard/MonApplet.java
Log:


Modified: trunk/src/fr/umlv/coa/corba/COA.java
===================================================================
--- trunk/src/fr/umlv/coa/corba/COA.java	2005-02-24 16:11:33 UTC (rev 22)
+++ trunk/src/fr/umlv/coa/corba/COA.java	2005-02-24 16:14:04 UTC (rev 23)
@@ -27,6 +27,7 @@
 	 * The main entry
 	 * 
 	 * @param args the program arguments
+	 * @throws Exception 
 	 */
 	public static void main (String [] args) throws Exception
 	{

Modified: trunk/src/fr/umlv/coa/corba/CardServant.java
===================================================================
--- trunk/src/fr/umlv/coa/corba/CardServant.java	2005-02-24 16:11:33 UTC (rev 22)
+++ trunk/src/fr/umlv/coa/corba/CardServant.java	2005-02-24 16:14:04 UTC (rev 23)
@@ -10,7 +10,6 @@
 
 package fr.umlv.coa.corba;
 
-import java.io.ByteArrayOutputStream;
 import java.io.IOException;
 
 import org.omg.CORBA.SystemException;

Modified: trunk/src/fr/umlv/coa/javacard/AppletCOA.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/AppletCOA.java	2005-02-24 16:11:33 UTC (rev 22)
+++ trunk/src/fr/umlv/coa/javacard/AppletCOA.java	2005-02-24 16:14:04 UTC (rev 23)
@@ -19,6 +19,7 @@
 
 	/**
 	 * @param aid
+	 * @param name 
 	 */
 	public AppletCOA (AppletID aid, String name)
 	{
@@ -45,7 +46,7 @@
 
 	/**
 	 * @param name
-	 * @return
+	 * @return the instruction value
 	 */
 	public byte getINS (String name)
 	{
@@ -66,6 +67,9 @@
 		mapINS.put (name , new Byte (number));
 	}
 		
+	/**
+	 * @return the applet name
+	 */
 	public String getName ()
 	{
 		return name;

Modified: trunk/src/fr/umlv/coa/javacard/MonApplet.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/MonApplet.java	2005-02-24 16:11:33 UTC (rev 22)
+++ trunk/src/fr/umlv/coa/javacard/MonApplet.java	2005-02-24 16:14:04 UTC (rev 23)
@@ -41,6 +41,9 @@
 	//----------------------------------------------------------//
 
 	/**
+	 * @param buffer 
+	 * @param offset 
+	 * @param length 
 	 * 
 	 */
 	public MonApplet (byte [] buffer, short offset, byte length)



From ludo93500 at sheep.berlios.de  Thu Feb 24 17:38:38 2005
From: ludo93500 at sheep.berlios.de (Ludovic at BerliOS)
Date: Thu, 24 Feb 2005 17:38:38 +0100
Subject: [Coa-svn] r24 - trunk/src/fr/umlv/coa/corba
Message-ID: <200502241638.j1OGcc3l005711@sheep.berlios.de>

Author: ludo93500
Date: 2005-02-24 17:38:37 +0100 (Thu, 24 Feb 2005)
New Revision: 24

Added:
   trunk/src/fr/umlv/coa/corba/CardChecker.java
Removed:
   trunk/src/fr/umlv/coa/corba/CardCheckThread.java
Modified:
   trunk/src/fr/umlv/coa/corba/COA.java
Log:
Ajout de l'enregistrement ds un naming context

Modified: trunk/src/fr/umlv/coa/corba/COA.java
===================================================================
--- trunk/src/fr/umlv/coa/corba/COA.java	2005-02-24 16:14:04 UTC (rev 23)
+++ trunk/src/fr/umlv/coa/corba/COA.java	2005-02-24 16:38:37 UTC (rev 24)
@@ -12,6 +12,8 @@
 
 import org.omg.CORBA.ORB;
 import org.omg.CORBA.Policy;
+import org.omg.CosNaming.NamingContextExt;
+import org.omg.CosNaming.NamingContextExtHelper;
 import org.omg.PortableServer.IdAssignmentPolicyValue;
 import org.omg.PortableServer.POA;
 import org.omg.PortableServer.POAHelper;
@@ -33,14 +35,24 @@
 	{
 		ORB orb  = ORB.init (args, null);
 		POA root = POAHelper.narrow (orb.resolve_initial_references ("RootPOA"));
+		NamingContextExt naming = null;
 		
+		try
+		{
+			naming = NamingContextExtHelper.narrow (orb.resolve_initial_references ("NameService"));
+		}
+		catch (Exception e)
+		{
+			naming = null;
+		}
+		
 		Policy[] policies = {root.create_id_assignment_policy (IdAssignmentPolicyValue.USER_ID)};
 		
 		POA child= root.create_POA ("COA", root.the_POAManager (), policies);
 
 		root.the_POAManager ().activate ();
 
-		new CardCheckThread (orb, child);
+		new CardChecker (orb, child, naming);
 		
 		orb.run ();
 	}

Deleted: trunk/src/fr/umlv/coa/corba/CardCheckThread.java
===================================================================
--- trunk/src/fr/umlv/coa/corba/CardCheckThread.java	2005-02-24 16:14:04 UTC (rev 23)
+++ trunk/src/fr/umlv/coa/corba/CardCheckThread.java	2005-02-24 16:38:37 UTC (rev 24)
@@ -1,257 +0,0 @@
-/* 
- * File    : COA.java
- * Created : 14 f?vr. 2005
- * 
- * =======================================
- * COA PROJECT ("http://coa.berlios.de")
- * =======================================
- *
- */
-
-package fr.umlv.coa.corba;
-
-import java.io.BufferedWriter;
-import java.io.File;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-
-import opencard.core.event.CTListener;
-import opencard.core.event.CardTerminalEvent;
-import opencard.core.terminal.CardTerminalException;
-
-import org.omg.CORBA.ORB;
-import org.omg.PortableServer.POA;
-import org.omg.PortableServer.Servant;
-
-import fr.umlv.coa.javacard.AppletCOA;
-import fr.umlv.coa.javacard.COACardInterface;
-
-
-/**
- * @author Ludo
- *
- */
-public final class CardCheckThread
-{
-	private static int COMPTEUR = 0;
-	
-	/** The ORB */
-	private final ORB   orb;
-	/** The POA */
-	private final POA   poa;
-	
-	/** Map associating for a slot ID <-> a list of applets */
-	private final Map		 slots		  = new HashMap ();
-	
-	/** The card listener */
-	private final CTListener cardListener = new CardListener ();
-	
-	/**
-	 * Constructor
-	 * 
-	 * @param orb the initial orb 
-	 * @param poa the poa
-	 */
-	public CardCheckThread (ORB orb, POA poa)
-	{
-		this.orb = orb;
-		this.poa = poa;
-		
-		System.out.println ("[COA Started]");
-		
-		// Register to the card listener and initialize it (by the singleton)
-		COACardInterface.getInstance ().addCardInsertionListener (cardListener);
-	}
-
-	//----------------------------------------------------------//
-	//------------------ PRIVATE METHODS -----------------------//
-	//----------------------------------------------------------//
-
-	/**
-	 * To export the IOR
-	 * 
-	 * @param szName 	  the applet name
-	 * @param iCardNumber the card number 
-	 * @param szIOR 	  the IOR to export
-	 * 
-	 * @throws IOException 
-	 */
-	private void exportIOR (String szName, int iCardNumber, String szIOR) throws IOException
-	{
-		String szFileNale = szName + iCardNumber + COAParameters.COA_IOR_FILE_SUFFIX;
-		BufferedWriter bw = null;
-		
-		try
-		{
-			bw = new BufferedWriter (new FileWriter (szFileNale));
-			bw.write (szIOR);
-		}
-		finally
-		{
-			if (bw != null)
-				bw.close ();
-		}
-	}
-	
-	
-	/**
-	 * To unexport an IOR reference
-	 * 
-	 * @param szName 	  the applet name
-	 * @param iCardNumber the card number 
-	 * 
-	 * @throws IOException 
-	 */
-	private void unexportIOR (String szName, int iCardNumber) throws IOException
-	{
-		String szFileName = szName + iCardNumber + COAParameters.COA_IOR_FILE_SUFFIX;
-		
-		File f = new File (szFileName);
-		f.delete ();
-	}	
-	
-	
-	/**
-	 * To generate the servant ID
-	 * 
-	 * @param szName 		the applet name
-	 * @param iCardNumber	the card number
-	 * @return the generated id
-	 */
-	private byte [] generate_card_id (String szName, int iCardNumber)
-	{
-		StringBuilder szID = new StringBuilder (COAParameters.COA_MODULE_NAME);
-		szID.append (COAParameters.COA_ID_DELIMITER);
-		szID.append (szName);
-		szID.append (COAParameters.COA_ID_DELIMITER);
-		szID.append (iCardNumber);
-		
-		return szID.toString ().getBytes ();
-	}
-	
-	
-	/**
-	 * The card listener
-	 * 
-	 * @author Ludo
-	 *
-	 */
-	private final class CardListener implements CTListener
-	{
-		/**
-		 * @see opencard.core.event.CTListener#cardInserted(opencard.core.event.CardTerminalEvent)
-		 */
-		public void cardInserted (CardTerminalEvent event) throws CardTerminalException
-		{
-			System.out.println ("CARD INSERTION -> SERVANT ACTIVATION");
-			
-			// The slot ID used for the slots map
-			Integer slotID = new Integer (event.getSlotID ());
-			
-			// Get the applets list for this slot
-			List list = (List) slots.get (slotID);
-			
-			if (list == null)
-				list = new ArrayList ();
-			
-			Map applets = COACardInterface.getInstance ().getAppletMap ();
-			
-			for (Iterator it = applets.keySet ().iterator (); it.hasNext ();)
-			{
-				String  	szName  = (String) it.next ();
-				AppletCOA	applet  = (AppletCOA) applets.get (szName);
-				
-				Servant servant = new CardServant (applet);
-				
-				try
-				{
-					byte [] oid	= generate_card_id (szName, slotID.intValue ());
-					
-					System.out.println ("OID DU SERVANT INSERE : " + new String (oid));
-					
-					poa.activate_object_with_id (oid, servant);
-					
-					exportIOR (szName, slotID.intValue (), orb.object_to_string (poa.id_to_reference (oid)));
-					
-					list.add (new ServantNameOID (oid, szName));
-				}
-				catch (Exception e)
-				{
-					e.printStackTrace ();
-				}
-			}
-			
-			slots.put (slotID, list);
-		}
-
-		
-		/**
-		 * @see opencard.core.event.CTListener#cardRemoved(opencard.core.event.CardTerminalEvent)
-		 */
-		public void cardRemoved (CardTerminalEvent event) throws CardTerminalException
-		{
-			System.out.println ("CARD INSERTION -> SERVANT DESACTIVATION");
-			
-			// The slot ID used for the slots map
-			Integer slotID = new Integer (event.getSlotID ());
-			
-			// Get the applets list for this slot
-			List list   = (List) slots.get (slotID);
-			
-			if (list == null)
-				return;
-			
-			for (Iterator it = list.iterator (); it.hasNext ();)
-			{
-				try
-				{
-					ServantNameOID s = (ServantNameOID) it.next (); 
-					
-					poa.deactivate_object (s.oid);
-					
-					unexportIOR (s.szName, slotID.intValue ());
-				}
-				catch (Exception e)
-				{
-					e.printStackTrace ();
-				}
-			}
-			
-			slots.remove (slotID);
-		}
-	}
-	
-	
-	
-	/**
-	 * Class containing the oid and the name of a servant 
-	 * 
-	 * @author Ludo
-	 *
-	 */
-	private static final class ServantNameOID
-	{
-		/** The servant id */
-		final byte [] oid;
-		/** The servant name */
-		final String  szName;
-		
-		/**
-		 * Constructor
-		 * 
-		 * @param oid 
-		 * @param szName 
-		 */
-		public ServantNameOID (byte [] oid, String szName)
-		{
-			this.oid 	= oid;
-			this.szName	= szName;
-		}
-	}
-	
-}

Added: trunk/src/fr/umlv/coa/corba/CardChecker.java
===================================================================
--- trunk/src/fr/umlv/coa/corba/CardChecker.java	2005-02-24 16:14:04 UTC (rev 23)
+++ trunk/src/fr/umlv/coa/corba/CardChecker.java	2005-02-24 16:38:37 UTC (rev 24)
@@ -0,0 +1,331 @@
+/* 
+ * File    : COA.java
+ * Created : 14 f?vr. 2005
+ * 
+ * =======================================
+ * COA PROJECT ("http://coa.berlios.de")
+ * =======================================
+ *
+ */
+
+package fr.umlv.coa.corba;
+
+import java.io.BufferedWriter;
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+
+import opencard.core.event.CTListener;
+import opencard.core.event.CardTerminalEvent;
+import opencard.core.terminal.CardTerminalException;
+
+import org.omg.CORBA.ORB;
+import org.omg.CORBA.Object;
+import org.omg.CosNaming.NameComponent;
+import org.omg.CosNaming.NamingContextExt;
+import org.omg.PortableServer.POA;
+import org.omg.PortableServer.Servant;
+
+import fr.umlv.coa.javacard.AppletCOA;
+import fr.umlv.coa.javacard.COACardInterface;
+
+
+/**
+ * @author Ludo
+ *
+ */
+public final class CardChecker
+{
+	private static int COMPTEUR = 0;
+	
+	/** The ORB */
+	private final ORB   orb;
+	/** The POA */
+	private final POA   poa;
+	
+	/** The naming context */
+	private final NamingContextExt naming;
+	
+	/** Map associating for a slot ID <-> a list of applets */
+	private final Map		 slots		  = new HashMap ();
+	
+	/** The card listener */
+	private final CTListener cardListener = new CardListener ();
+	
+	/**
+	 * Constructor
+	 * 
+	 * @param orb 	 the initial orb 
+	 * @param poa 	 the poa
+	 * @param naming the naming context
+	 */
+	public CardChecker (ORB orb, POA poa, NamingContextExt naming)
+	{
+		this.orb = orb;
+		this.poa = poa;
+		
+		this.naming = naming;
+		
+		System.out.println ("[COA Started]");
+		
+		// Register to the card listener and initialize it (by the singleton)
+		COACardInterface.getInstance ().addCardInsertionListener (cardListener);
+	}
+
+	//----------------------------------------------------------//
+	//------------------ PRIVATE METHODS -----------------------//
+	//----------------------------------------------------------//
+
+	/**
+	 * To export the IOR
+	 * 
+	 * @param szName 	  the applet name
+	 * @param iCardNumber the card number 
+	 * @param object 	  the object to export
+	 * 
+	 * @throws Exception 
+	 */
+	private void exportObject (String szName, int iCardNumber, Object object) throws Exception
+	{
+		exportObjectToFile (szName, iCardNumber, object);
+		
+		if (naming != null)
+			exportObjectToNamingService (szName, iCardNumber, object);
+	}
+	
+	/**
+	 * To export the IOR
+	 * 
+	 * @param szName 	  the applet name
+	 * @param iCardNumber the card number 
+	 * @param object 	  the object to export
+	 * 
+	 * @throws Exception 
+	 */
+	private void exportObjectToFile (String szName, int iCardNumber, Object object) throws Exception
+	{
+		String szFileName = szName + iCardNumber + COAParameters.COA_IOR_FILE_SUFFIX;
+		BufferedWriter bw = null;
+		
+		try
+		{
+			bw = new BufferedWriter (new FileWriter (szFileName));
+			bw.write (orb.object_to_string (object));
+		}
+		finally
+		{
+			if (bw != null)
+				bw.close ();
+		}
+	}
+	
+	
+	/**
+	 * To export the IOR
+	 * 
+	 * @param szName 	  the applet name
+	 * @param iCardNumber the card number 
+	 * @param object 	  the object to export
+	 * 
+	 * @throws Exception 
+	 */
+	private void exportObjectToNamingService (String szName, int iCardNumber, Object object) throws Exception
+	{
+		String szRegistrationName = szName + iCardNumber;
+		
+		NameComponent [] name = naming.to_name (szRegistrationName);
+		naming.rebind (name, object);
+	}	
+	
+	/**
+	 * To unexport a registered objet
+	 * 
+	 * @param szName 	  the applet name
+	 * @param iCardNumber the card number 
+	 * 
+	 * @throws Exception 
+	 */
+	private void unexportObject (String szName, int iCardNumber) throws Exception
+	{
+		unexportOnFile (szName, iCardNumber);
+		
+		if (naming != null)
+			unexportOnNamingContext (szName, iCardNumber);
+	}
+	
+	
+	/**
+	 * To unexport an IOR reference
+	 * 
+	 * @param szName 	  the applet name
+	 * @param iCardNumber the card number 
+	 * 
+	 * @throws IOException 
+	 */
+	private void unexportOnFile (String szName, int iCardNumber) throws IOException
+	{
+		String szFileName = szName + iCardNumber + COAParameters.COA_IOR_FILE_SUFFIX;
+		
+		File f = new File (szFileName);
+		f.delete ();
+	}	
+	
+	/**
+	 * To unexport an IOR reference
+	 * 
+	 * @param szName 	  the applet name
+	 * @param iCardNumber the card number 
+	 * 
+	 * @throws Exception 
+	 */
+	private void unexportOnNamingContext (String szName, int iCardNumber) throws Exception
+	{
+		String szRegistrationName = szName + iCardNumber;
+		
+		naming.unbind (naming.to_name (szRegistrationName));
+	}	
+	
+	/**
+	 * To generate the servant ID
+	 * 
+	 * @param szName 		the applet name
+	 * @param iCardNumber	the card number
+	 * @return the generated id
+	 */
+	private byte [] generate_card_id (String szName, int iCardNumber)
+	{
+		StringBuilder szID = new StringBuilder (COAParameters.COA_MODULE_NAME);
+		szID.append (COAParameters.COA_ID_DELIMITER);
+		szID.append (szName);
+		szID.append (COAParameters.COA_ID_DELIMITER);
+		szID.append (iCardNumber);
+		
+		return szID.toString ().getBytes ();
+	}
+	
+	
+	/**
+	 * The card listener
+	 * 
+	 * @author Ludo
+	 *
+	 */
+	private final class CardListener implements CTListener
+	{
+		/**
+		 * @see opencard.core.event.CTListener#cardInserted(opencard.core.event.CardTerminalEvent)
+		 */
+		public void cardInserted (CardTerminalEvent event) throws CardTerminalException
+		{
+			System.out.println ("CARD INSERTION -> SERVANT ACTIVATION");
+			
+			// The slot ID used for the slots map
+			Integer slotID = new Integer (event.getSlotID ());
+			
+			// Get the applets list for this slot
+			List list = (List) slots.get (slotID);
+			
+			if (list == null)
+				list = new ArrayList ();
+			
+			Map applets = COACardInterface.getInstance ().getAppletMap ();
+			
+			for (Iterator it = applets.keySet ().iterator (); it.hasNext ();)
+			{
+				String  	szName  = (String) it.next ();
+				AppletCOA	applet  = (AppletCOA) applets.get (szName);
+				
+				Servant servant = new CardServant (applet);
+				
+				try
+				{
+					byte [] oid	= generate_card_id (szName, slotID.intValue ());
+					
+					System.out.println ("OID DU SERVANT INSERE : " + new String (oid));
+					
+					poa.activate_object_with_id (oid, servant);
+					
+					exportObject (szName, slotID.intValue (), poa.id_to_reference (oid));
+					
+					list.add (new ServantNameOID (oid, szName));
+				}
+				catch (Exception e)
+				{
+					e.printStackTrace ();
+				}
+			}
+			
+			slots.put (slotID, list);
+		}
+
+		
+		/**
+		 * @see opencard.core.event.CTListener#cardRemoved(opencard.core.event.CardTerminalEvent)
+		 */
+		public void cardRemoved (CardTerminalEvent event) throws CardTerminalException
+		{
+			System.out.println ("CARD INSERTION -> SERVANT DESACTIVATION");
+			
+			// The slot ID used for the slots map
+			Integer slotID = new Integer (event.getSlotID ());
+			
+			// Get the applets list for this slot
+			List list   = (List) slots.get (slotID);
+			
+			if (list == null)
+				return;
+			
+			for (Iterator it = list.iterator (); it.hasNext ();)
+			{
+				try
+				{
+					ServantNameOID s = (ServantNameOID) it.next (); 
+					
+					poa.deactivate_object (s.oid);
+					
+					unexportObject (s.szName, slotID.intValue ());
+				}
+				catch (Exception e)
+				{
+					e.printStackTrace ();
+				}
+			}
+			
+			slots.remove (slotID);
+		}
+	}
+	
+	
+	
+	/**
+	 * Class containing the oid and the name of a servant 
+	 * 
+	 * @author Ludo
+	 *
+	 */
+	private static final class ServantNameOID
+	{
+		/** The servant id */
+		final byte [] oid;
+		/** The servant name */
+		final String  szName;
+		
+		/**
+		 * Constructor
+		 * 
+		 * @param oid 
+		 * @param szName 
+		 */
+		public ServantNameOID (byte [] oid, String szName)
+		{
+			this.oid 	= oid;
+			this.szName	= szName;
+		}
+	}
+	
+}



From ludo93500 at sheep.berlios.de  Thu Feb 24 22:52:26 2005
From: ludo93500 at sheep.berlios.de (Ludovic at BerliOS)
Date: Thu, 24 Feb 2005 22:52:26 +0100
Subject: [Coa-svn] r25 - trunk/src/fr/umlv/coa/corba
Message-ID: <200502242152.j1OLqQM4024201@sheep.berlios.de>

Author: ludo93500
Date: 2005-02-24 22:52:25 +0100 (Thu, 24 Feb 2005)
New Revision: 25

Modified:
   trunk/src/fr/umlv/coa/corba/CardServant.java
Log:


Modified: trunk/src/fr/umlv/coa/corba/CardServant.java
===================================================================
--- trunk/src/fr/umlv/coa/corba/CardServant.java	2005-02-24 16:38:37 UTC (rev 24)
+++ trunk/src/fr/umlv/coa/corba/CardServant.java	2005-02-24 21:52:25 UTC (rev 25)
@@ -77,6 +77,9 @@
 			input.read (arg, 0, arg.length);
 			
 			byte [] res = COACardInterface.getInstance ().invoke (applet.getName (), method, arg);
+
+			if (res == null)
+				return null;
 			
 			//byte [] 	 res = "toto".getBytes ();
 			



From leny at sheep.berlios.de  Thu Feb 24 22:58:39 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Thu, 24 Feb 2005 22:58:39 +0100
Subject: [Coa-svn] r26 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502242158.j1OLwdKe024512@sheep.berlios.de>

Author: leny
Date: 2005-02-24 22:58:34 +0100 (Thu, 24 Feb 2005)
New Revision: 26

Modified:
   trunk/src/fr/umlv/coa/javacard/COACardInterface.java
Log:


Modified: trunk/src/fr/umlv/coa/javacard/COACardInterface.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-24 21:52:25 UTC (rev 25)
+++ trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-24 21:58:34 UTC (rev 26)
@@ -238,8 +238,25 @@
 		}
 
 		if (response != null)
-			return response.getBuffer();
-		
+		{
+			byte [] buffer = response.getBuffer();
+			
+			if(buffer.length>=2)
+			{
+				if((buffer[buffer.length-1]!=(byte)0x00)||(buffer[buffer.length-2]!=(byte)0x90)
+				{
+					return null;
+				}
+				else
+				{ 	
+					byte [] tmpBuff = new byte[buffer.length-2];
+						
+					System.arraycopy(buffer, 0, tmpBuff, 0, buffer.length-2);
+					
+					return tmpBuff;
+				}
+			}
+		}
 		return null;
 	}
 		



From leny at sheep.berlios.de  Thu Feb 24 23:07:47 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Thu, 24 Feb 2005 23:07:47 +0100
Subject: [Coa-svn] r27 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502242207.j1OM7l7g024962@sheep.berlios.de>

Author: leny
Date: 2005-02-24 23:07:45 +0100 (Thu, 24 Feb 2005)
New Revision: 27

Modified:
   trunk/src/fr/umlv/coa/javacard/COACardInterface.java
Log:


Modified: trunk/src/fr/umlv/coa/javacard/COACardInterface.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-24 21:58:34 UTC (rev 26)
+++ trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-24 22:07:45 UTC (rev 27)
@@ -47,7 +47,7 @@
 public final class COACardInterface
 {
 	/** The opencard home directory */ 
-	private static final String	HOME_DIR 	= "d:" + File.separator + "gemplus" + File.separator + "gemxpresso.rad3";
+	private static final String	HOME_DIR 	= "c:" + File.separator + "gemplus" + File.separator + "gemxpresso.rad3";
 	/** The card reader */
 	private static final String	CARD_TARGET	= "gempc410_com1";
 	/** The card profile name */
@@ -243,7 +243,7 @@
 			
 			if(buffer.length>=2)
 			{
-				if((buffer[buffer.length-1]!=(byte)0x00)||(buffer[buffer.length-2]!=(byte)0x90)
+				if((buffer[buffer.length-1]!=(byte)0x00)||(buffer[buffer.length-2]!=(byte)0x90))
 				{
 					return null;
 				}



From leny at sheep.berlios.de  Fri Feb 25 18:51:36 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Fri, 25 Feb 2005 18:51:36 +0100
Subject: [Coa-svn] r28 - in trunk/src/fr/umlv/coa: corba javacard
Message-ID: <200502251751.j1PHpaGm006911@sheep.berlios.de>

Author: leny
Date: 2005-02-25 18:51:23 +0100 (Fri, 25 Feb 2005)
New Revision: 28

Modified:
   trunk/src/fr/umlv/coa/corba/COAClient.java
   trunk/src/fr/umlv/coa/corba/CardServant.java
   trunk/src/fr/umlv/coa/javacard/MonApplet.java
Log:


Modified: trunk/src/fr/umlv/coa/corba/COAClient.java
===================================================================
--- trunk/src/fr/umlv/coa/corba/COAClient.java	2005-02-24 22:07:45 UTC (rev 27)
+++ trunk/src/fr/umlv/coa/corba/COAClient.java	2005-02-25 17:51:23 UTC (rev 28)
@@ -13,6 +13,8 @@
 import java.io.BufferedReader;
 import java.io.FileReader;
 
+import opencard.core.util.HexString;
+
 import org.omg.CORBA.Any;
 import org.omg.CORBA.ORB;
 import org.omg.CORBA.Object;
@@ -20,6 +22,9 @@
 import org.omg.CORBA.TCKind;
 import org.omg.CORBA.TypeCode;
 
+import fr.umlv.coa.javacard.MonApplet;
+import fr.umlv.coa.monapplet.MonAppletHelper;
+
 /**
  * @author Ludo
  *
@@ -39,25 +44,60 @@
 		
 		String szRef = null;
 		
-		BufferedReader reader = new BufferedReader (new FileReader ("Test00Ref"));
+		BufferedReader reader = new BufferedReader (new FileReader ("MonApplet0Ref"));
 		szRef = reader.readLine ();
 		reader.close ();
 		
 		Object  object = orb.string_to_object (szRef);
-		Request req	   = object._request ("hello");		
 		
-		TypeCode retObject = orb.get_primitive_tc (TCKind.tk_string);
-		req.set_return_type (retObject);
-		//req.set_return_type (orb.create_interface_tc ("IDL:COA/Test0-0:1.0", "Test"));
-		req.invoke ();
+		fr.umlv.coa.monapplet.MonApplet applet = MonAppletHelper.unchecked_narrow (object);
 		
-		Any result   = req.return_value ();
-		String szRes = result.extract_string (); 
+		byte [] res = applet.getName ();
 		
-		System.out.println ("RESULTAT : " + szRes);
+		int iIndex = 0;
 		
-		//System.out.println (result.extract_octet ());
+		for (; res [iIndex] != 0; iIndex ++);
 		
+		System.out.println ("NAME " + new String (res, 0, iIndex));
+		
+		//System.out.println (HexString.hexify(res));
+
+		System.out.println ("--------------------------------------");
+		
+		res = applet.getNumber ();
+		
+		int iRes = res [0] << 8 | res [1];
+		
+		System.out.println ("RESULTAT : " + iRes);
+		
+		
+		//System.out.println (HexString.hexify(res));
+
+		
+		//System.out.println (new String (applet.getName ()));
+		
+		
+		//System.out.println (HexString.hexify(applet.getArg()));
+		
+		//applet.setArg((byte)0x28);
+		
+		//System.out.println (HexString.hexify(applet.getArg()));
+		
+//		
+//		Request req	   = object._request ("getName");		
+//		
+//		TypeCode retObject = orb.get_primitive_tc (TCKind.tk_string);
+//		req.set_return_type (retObject);
+//		//req.set_return_type (orb.create_interface_tc ("IDL:COA/Test0-0:1.0", "Test"));
+//		req.invoke();
+//		
+//		Any result   = req.return_value ();
+//		String Res = result.extract_string(); 
+//		
+//		System.out.println ("RESULTAT : " + Res);
+//		
+//		//System.out.println (result.extract_octet ());
+		
 		/*while (true)
 		{
 			System.out.println ("OCTET : " + (char) result.extract_octet ());

Modified: trunk/src/fr/umlv/coa/corba/CardServant.java
===================================================================
--- trunk/src/fr/umlv/coa/corba/CardServant.java	2005-02-24 22:07:45 UTC (rev 27)
+++ trunk/src/fr/umlv/coa/corba/CardServant.java	2005-02-25 17:51:23 UTC (rev 28)
@@ -12,6 +12,8 @@
 
 import java.io.IOException;
 
+import opencard.core.util.HexString;
+
 import org.omg.CORBA.SystemException;
 import org.omg.CORBA.portable.InputStream;
 import org.omg.CORBA.portable.InvokeHandler;
@@ -72,21 +74,35 @@
 
 		try
 		{
+			System.out.println ("TAILLE INPUT : " + input.available ());
+			
 			// Construction de l'argument
 			byte [] arg = new byte [input.available ()];
-			input.read (arg, 0, arg.length);
+			//arg [0] = input.read_octet ();
+			//input.read_octet_array (arg, 0, arg.length);
 			
+			//System.out.println ("AFFICHAGE DE L ARG");
+			//System.out.println (HexString.hexify(arg));
+			
+			byte [] ret = new byte [256];
 			byte [] res = COACardInterface.getInstance ().invoke (applet.getName (), method, arg);
 
 			if (res == null)
 				return null;
 			
+			if (res == null)
+				return out;
+			
+			System.arraycopy (res, 0, ret, 0, res.length);
+			
 			//byte [] 	 res = "toto".getBytes ();
 			
-			/*for (int i = 0; i < res.length; ++i)
-				out.write_octet (res [i]);*/
+			out.write_octet_array (ret, 0, ret.length);
 			
-			out.write_string (new String (res));
+			//for (int i = 0; i < res.length; ++i)
+				//out.write_octet (res [i]);
+			
+			//out.write_string (new String (res));
 		}
 		catch (IOException e)
 		{

Modified: trunk/src/fr/umlv/coa/javacard/MonApplet.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/MonApplet.java	2005-02-24 22:07:45 UTC (rev 27)
+++ trunk/src/fr/umlv/coa/javacard/MonApplet.java	2005-02-25 17:51:23 UTC (rev 28)
@@ -27,14 +27,19 @@
 	private final static byte GET_NAME = (byte) 0xFF;
 	private final static byte INS_GET_NAME = (byte) 0x13;
 	private final static byte INS_GET_NUMBER = (byte) 0x14;
+	private final static byte INS_GET_ARG = (byte) 0x15;
+	private final static byte INS_SET_ARG = (byte) 0x16;
 	private final static byte INS_DESC = (byte) 0xFD;
 	private final static byte INS_LIST_INS = (byte) 0xFE;
 	private final static byte [] DESC_OK = {(byte)0x12, (byte)0x03};
 	private final static byte [] DESC_NOK = {(byte)0x12, (byte)0x04};
-	private final static byte [] LIST_INS = {(byte)INS_GET_NAME, (byte)INS_GET_NUMBER};	
+	private final static byte [] LIST_INS = {(byte)INS_GET_NAME, (byte)INS_GET_NUMBER, (byte)INS_GET_ARG, (byte)INS_SET_ARG};	
 	private final static byte [] INS_GET_NAME_DESC = {(byte)'g', (byte)'e',(byte)'t',(byte)'N',(byte)'a',(byte)'m',(byte)'e'};
+	private final static byte [] INS_GET_ARG_DESC = {(byte)'g', (byte)'e',(byte)'t',(byte)'A',(byte)'r',(byte)'g'};
+	private final static byte [] INS_SET_ARG_DESC = {(byte)'s', (byte)'e',(byte)'t',(byte)'A',(byte)'r',(byte)'g'};
 	private final static byte [] INS_GET_NUMBER_DESC = {(byte)'g', (byte)'e',(byte)'t',(byte)'N',(byte)'u',(byte)'m',(byte)'b',(byte)'e',(byte)'r'};
 	private final static byte [] NAME = {(byte)'M', (byte)'o', (byte)'n', (byte)'A', (byte)'p', (byte)'p', (byte)'l', (byte)'e', (byte)'t' };
+	private byte arg = (byte)0;
 	
 	//----------------------------------------------------------//
 	//------------------- CONSTRUCTORS -------------------------//
@@ -94,6 +99,13 @@
 				case INS_GET_NUMBER :
 					getNumber (arg0);
 					break;
+				case INS_GET_ARG :
+					getArg (arg0);
+					break;
+				case INS_SET_ARG :
+					setArg (arg0);
+					break;
+					
 				default :
 					ISOException.throwIt (ISO7816.SW_INS_NOT_SUPPORTED);
 			}
@@ -154,10 +166,42 @@
 		
 		apdu.sendBytes ((short) 5 , (short) 2);
 	}
+
+	/**
+	 * @param apdu
+	 */
+	private void getArg (APDU apdu)
+	{
+		byte [] apduBuffer = apdu.getBuffer ();
+		
+		apduBuffer [5] = arg;
+		
+		apdu.setOutgoing ();
+		
+		apdu.setOutgoingLength ((short) 1);
+		
+		apdu.sendBytes ((short) 5 , (short) 1);
+	}
 	
 	/**
 	 * @param apdu
 	 */
+	private void setArg (APDU apdu)
+	{
+		byte [] apduBuffer = apdu.getBuffer ();
+		
+		arg = apduBuffer[5];
+		
+		apdu.setOutgoing ();
+		
+		apdu.setOutgoingLength ((short) 0);
+		
+		apdu.sendBytes ((short) 5 , (short) 0);
+	}
+	
+	/**
+	 * @param apdu
+	 */
 	private void sendAppletName (APDU apdu)
 	{
 		byte [] buffer = apdu.getBuffer ();
@@ -187,6 +231,12 @@
 			case INS_GET_NUMBER :
 				sendInsDesc (apdu , INS_GET_NUMBER_DESC , true);
 				break;
+			case INS_GET_ARG :
+				sendInsDesc (apdu , INS_GET_ARG_DESC, true);
+				break;
+			case INS_SET_ARG :
+				sendInsDesc (apdu , INS_SET_ARG_DESC, true);
+				break;
 			default :
 				sendInsDesc (apdu , null , false);
 		}



From leny at sheep.berlios.de  Fri Feb 25 19:36:25 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Fri, 25 Feb 2005 19:36:25 +0100
Subject: [Coa-svn] r29 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502251836.j1PIaPDn007629@sheep.berlios.de>

Author: leny
Date: 2005-02-25 19:36:24 +0100 (Fri, 25 Feb 2005)
New Revision: 29

Added:
   trunk/src/fr/umlv/coa/javacard/AppletInstruction.java
Modified:
   trunk/src/fr/umlv/coa/javacard/AppletCOA.java
   trunk/src/fr/umlv/coa/javacard/COACardInterface.java
   trunk/src/fr/umlv/coa/javacard/MonApplet.java
Log:


Modified: trunk/src/fr/umlv/coa/javacard/AppletCOA.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/AppletCOA.java	2005-02-25 17:51:23 UTC (rev 28)
+++ trunk/src/fr/umlv/coa/javacard/AppletCOA.java	2005-02-25 18:36:24 UTC (rev 29)
@@ -1,6 +1,7 @@
 package fr.umlv.coa.javacard;
 
 import java.util.HashMap;
+import java.util.Iterator;
 import java.util.Map;
 
 import opencard.opt.applet.AppletID;
@@ -50,21 +51,30 @@
 	 */
 	public byte getINS (String name)
 	{
-		Byte insByte = (Byte) mapINS.get (name);
+		byte insByte = -1;
 		
-		if(insByte==null)
+		for(Iterator i = mapINS.keySet().iterator(); i.hasNext();)
+		{
+			AppletInstruction ins = (AppletInstruction)i.next();
+			if(ins.getName().equals(name))
+			{
+				insByte = ins.getReturnType();
+			}
+		}
+		
+		if(insByte==-1)
 			return (byte)0xFF;
 		
-		return insByte.byteValue ();
+		return insByte;
 	}
 
 	/**
 	 * @param number
 	 * @param name
 	 */
-	public void addINS (byte number, String name)
+	public void addINS (byte number, AppletInstruction ins)
 	{
-		mapINS.put (name , new Byte (number));
+		mapINS.put (ins , new Byte (number));
 	}
 		
 	/**

Added: trunk/src/fr/umlv/coa/javacard/AppletInstruction.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/AppletInstruction.java	2005-02-25 17:51:23 UTC (rev 28)
+++ trunk/src/fr/umlv/coa/javacard/AppletInstruction.java	2005-02-25 18:36:24 UTC (rev 29)
@@ -0,0 +1,49 @@
+/* 
+ * File    : AppletInstruction.java
+ * Created : 25 f?vr. 2005
+ * 
+ * =======================================
+ * COA PROJECT ("http://coa.berlios.de")
+ * =======================================
+ *
+ */
+
+package fr.umlv.coa.javacard;
+
+/**
+ * @author Administrateur
+ *
+ */
+public class AppletInstruction
+{
+	private String	name;
+	private byte	returnType;
+	
+	
+	
+	/**
+	 * @param name
+	 * @param returnType
+	 */
+	public AppletInstruction (String name, byte returnType)
+	{
+		this.name = name;
+		this.returnType = returnType;
+	}
+	
+	
+	/**
+	 * @return Returns the name.
+	 */
+	public String getName ()
+	{
+		return name;
+	}
+	/**
+	 * @return Returns the returnType.
+	 */
+	public byte getReturnType ()
+	{
+		return returnType;
+	}
+}

Modified: trunk/src/fr/umlv/coa/javacard/COACardInterface.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-25 17:51:23 UTC (rev 28)
+++ trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-25 18:36:24 UTC (rev 29)
@@ -47,7 +47,7 @@
 public final class COACardInterface
 {
 	/** The opencard home directory */ 
-	private static final String	HOME_DIR 	= "c:" + File.separator + "gemplus" + File.separator + "gemxpresso.rad3";
+	private static final String	HOME_DIR 	= "c:\\gemplus\\gemxpresso.rad3";
 	/** The card reader */
 	private static final String	CARD_TARGET	= "gempc410_com1";
 	/** The card profile name */
@@ -61,7 +61,10 @@
 	private final static byte		CARD_GET_INS		= (byte) 0xFE;
 	/** The card get instruction name */
 	private final static byte		CARD_GET_INS_NAME	= (byte) 0xFD;
+	/** The card get instruction return type */
+	private final static byte		CARD_GET_INS_TYPE	= (byte) 0xFC;
 	
+	
 	/** The Singleton instance */
 	private static COACardInterface	INSTANCE = null;
 
@@ -107,7 +110,16 @@
 	/** The application key index */
 	private int						appKeyIndex			= 0;
 
+	/** Applet return Values */
+	private static final byte		BYTE_APPLET			= 0;
+	private static final byte		SHORT_APPLET		= 1;
+	private static final byte		INT_APPLET			= 2;
+	private static final byte		LONG_APPLET			= 3;
+	private static final byte		STRING_APPLET		= 4;
+	private static final byte		ARRAY_APPLET		= 5;
+	private static final byte		VOID_APPLET			= 6;
 	
+	
 	//----------------------------------------------------------//
 	//--------------------- CONSTRUCTORS -----------------------//
 	//----------------------------------------------------------//
@@ -474,6 +486,7 @@
 	private void buildAppletINSMap (AppletCOA applet)
 	{
 		byte [] desc = getAppletDescription (applet.getAid ());
+		byte [] type = getAppletReturnType(applet.getAid());
 		int i = 2;
 
 		if ((desc.length < 2) || (desc [0] != 0x12) || (desc [1] != 0x03))
@@ -485,9 +498,36 @@
 			
 			String instructionName = getInstructionName(applet.getAid(), instructionByte);
 			
-			System.out.println ("\t Found "+instructionName + " - "+instructionByte);
+			String tmpType = "";
+			
+			switch(type[i])
+			{
+				case BYTE_APPLET:
+					tmpType = "byte";
+					break;
+				case SHORT_APPLET:
+					tmpType = "short";
+					break;
+				case INT_APPLET:
+					tmpType = "int";
+					break;
+				case LONG_APPLET:
+					tmpType = "long";
+					break;
+				case STRING_APPLET:
+					tmpType = "String";
+					break;
+				case ARRAY_APPLET:
+					tmpType = "byte []";
+					break;
+				case VOID_APPLET:
+					tmpType = "void";
+					break;
+			}
+			
+			System.out.println ("\t Found : "+tmpType+" "+instructionName + " - "+instructionByte);
 
-			applet.addINS (instructionByte , instructionName);
+			applet.addINS (instructionByte , new AppletInstruction(instructionName, type[i]));
 			
 			i++;
 		}
@@ -527,6 +567,39 @@
 	}
 
 	/**
+	 * To get an applet instructions return type
+	 * 
+	 * @param aid the applet ID
+	 * @return the applet description byte array
+	 */
+	private byte [] getAppletReturnType (AppletID aid)
+	{
+		try
+		{
+			byte [] aidBuffer = new byte [5];
+
+			serv.select (aid);
+
+			aidBuffer [0] = aid.getBytes () [0];
+			aidBuffer [1] = CARD_GET_INS_TYPE;
+			aidBuffer [2] = (byte) 0x00;
+			aidBuffer [3] = (byte) 0x00;
+			aidBuffer [4] = (byte) 0x00;
+
+			ResponseAPDU response = serv.sendAPDU (aidBuffer);
+
+			return response.getBuffer ();
+
+		}
+		catch (Exception e)
+		{
+			e.printStackTrace ();
+		}
+
+		return null;
+	}
+	
+	/**
 	 * To get the applet name
 	 * 
 	 * @param aid the applet ID

Modified: trunk/src/fr/umlv/coa/javacard/MonApplet.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/MonApplet.java	2005-02-25 17:51:23 UTC (rev 28)
+++ trunk/src/fr/umlv/coa/javacard/MonApplet.java	2005-02-25 18:36:24 UTC (rev 29)
@@ -30,6 +30,7 @@
 	private final static byte INS_GET_ARG = (byte) 0x15;
 	private final static byte INS_SET_ARG = (byte) 0x16;
 	private final static byte INS_DESC = (byte) 0xFD;
+	private final static byte INS_RETRUN_TYPE = (byte) 0xFC;
 	private final static byte INS_LIST_INS = (byte) 0xFE;
 	private final static byte [] DESC_OK = {(byte)0x12, (byte)0x03};
 	private final static byte [] DESC_NOK = {(byte)0x12, (byte)0x04};
@@ -38,6 +39,7 @@
 	private final static byte [] INS_GET_ARG_DESC = {(byte)'g', (byte)'e',(byte)'t',(byte)'A',(byte)'r',(byte)'g'};
 	private final static byte [] INS_SET_ARG_DESC = {(byte)'s', (byte)'e',(byte)'t',(byte)'A',(byte)'r',(byte)'g'};
 	private final static byte [] INS_GET_NUMBER_DESC = {(byte)'g', (byte)'e',(byte)'t',(byte)'N',(byte)'u',(byte)'m',(byte)'b',(byte)'e',(byte)'r'};
+	private final static byte [] INS_TYPE = {4, 1, 0, 6};
 	private final static byte [] NAME = {(byte)'M', (byte)'o', (byte)'n', (byte)'A', (byte)'p', (byte)'p', (byte)'l', (byte)'e', (byte)'t' };
 	private byte arg = (byte)0;
 	
@@ -105,7 +107,9 @@
 				case INS_SET_ARG :
 					setArg (arg0);
 					break;
-					
+				case INS_RETRUN_TYPE :
+					sendReturnType (arg0);
+					break;					
 				default :
 					ISOException.throwIt (ISO7816.SW_INS_NOT_SUPPORTED);
 			}
@@ -259,6 +263,20 @@
 		apdu.sendBytes ((short) 0 , (short) (2 + LIST_INS.length));
 	}
 	
+	private void sendReturnType (APDU apdu)
+	{
+		byte [] buffer = apdu.getBuffer ();
+		
+		Util.arrayCopy (DESC_OK , (short) 0 , buffer , (short) 0 , (short) 2);
+		Util.arrayCopy (INS_TYPE , (short) 0 , buffer , (short) 2 ,
+				(short) INS_TYPE.length);
+		
+		apdu.setOutgoing ();
+		apdu.setOutgoingLength ((short) (2 + INS_TYPE.length));
+		
+		apdu.sendBytes ((short) 0 , (short) (2 + INS_TYPE.length));
+	}
+	
 	/**
 	 * @param apdu
 	 * @param desc



From leny at sheep.berlios.de  Fri Feb 25 20:12:45 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Fri, 25 Feb 2005 20:12:45 +0100
Subject: [Coa-svn] r30 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502251912.j1PJCjXk009341@sheep.berlios.de>

Author: leny
Date: 2005-02-25 20:12:42 +0100 (Fri, 25 Feb 2005)
New Revision: 30

Modified:
   trunk/src/fr/umlv/coa/javacard/COACardInterface.java
   trunk/src/fr/umlv/coa/javacard/MonApplet.java
Log:


Modified: trunk/src/fr/umlv/coa/javacard/COACardInterface.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-25 18:36:24 UTC (rev 29)
+++ trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-25 19:12:42 UTC (rev 30)
@@ -212,9 +212,10 @@
 		
 		if (arg != null)
 		{
-			lengthArg = (byte)arg.length;
+			lengthArg = (byte)(arg.length+1);
 			aidBuffer = new byte [5+lengthArg];
-			System.arraycopy(arg, 0, aidBuffer, 5, lengthArg);
+			System.arraycopy(arg, 0, aidBuffer, 5, lengthArg-1);
+			aidBuffer[5+lengthArg-1] = 0;
 		}
 		else
 		{

Modified: trunk/src/fr/umlv/coa/javacard/MonApplet.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/MonApplet.java	2005-02-25 18:36:24 UTC (rev 29)
+++ trunk/src/fr/umlv/coa/javacard/MonApplet.java	2005-02-25 19:12:42 UTC (rev 30)
@@ -41,7 +41,7 @@
 	private final static byte [] INS_GET_NUMBER_DESC = {(byte)'g', (byte)'e',(byte)'t',(byte)'N',(byte)'u',(byte)'m',(byte)'b',(byte)'e',(byte)'r'};
 	private final static byte [] INS_TYPE = {4, 1, 0, 6};
 	private final static byte [] NAME = {(byte)'M', (byte)'o', (byte)'n', (byte)'A', (byte)'p', (byte)'p', (byte)'l', (byte)'e', (byte)'t' };
-	private byte arg = (byte)0;
+	private byte arg = (byte)12;
 	
 	//----------------------------------------------------------//
 	//------------------- CONSTRUCTORS -------------------------//
@@ -193,14 +193,16 @@
 	private void setArg (APDU apdu)
 	{
 		byte [] apduBuffer = apdu.getBuffer ();
+
+		apdu.setIncomingAndReceive();
 		
 		arg = apduBuffer[5];
 		
 		apdu.setOutgoing ();
 		
-		apdu.setOutgoingLength ((short) 0);
+		apdu.setOutgoingLength ((short) 1);
 		
-		apdu.sendBytes ((short) 5 , (short) 0);
+		apdu.sendBytes ((short) 5 , (short) 1);
 	}
 	
 	/**



From leny at sheep.berlios.de  Sun Feb 27 00:28:41 2005
From: leny at sheep.berlios.de (Leny at BerliOS)
Date: Sun, 27 Feb 2005 00:28:41 +0100
Subject: [Coa-svn] r31 - trunk/src/fr/umlv/coa/javacard
Message-ID: <200502262328.j1QNSfTn032083@sheep.berlios.de>

Author: leny
Date: 2005-02-27 00:28:40 +0100 (Sun, 27 Feb 2005)
New Revision: 31

Modified:
   trunk/src/fr/umlv/coa/javacard/COACardInterface.java
Log:


Modified: trunk/src/fr/umlv/coa/javacard/COACardInterface.java
===================================================================
--- trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-25 19:12:42 UTC (rev 30)
+++ trunk/src/fr/umlv/coa/javacard/COACardInterface.java	2005-02-26 23:28:40 UTC (rev 31)
@@ -111,13 +111,13 @@
 	private int						appKeyIndex			= 0;
 
 	/** Applet return Values */
-	private static final byte		BYTE_APPLET			= 0;
-	private static final byte		SHORT_APPLET		= 1;
-	private static final byte		INT_APPLET			= 2;
-	private static final byte		LONG_APPLET			= 3;
-	private static final byte		STRING_APPLET		= 4;
-	private static final byte		ARRAY_APPLET		= 5;
-	private static final byte		VOID_APPLET			= 6;
+	public static final byte		BYTE_APPLET			= 0;
+	public static final byte		SHORT_APPLET		= 1;
+	public static final byte		INT_APPLET			= 2;
+	public static final byte		LONG_APPLET			= 3;
+	public static final byte		STRING_APPLET		= 4;
+	public static final byte		ARRAY_APPLET		= 5;
+	public static final byte		VOID_APPLET			= 6;
 	
 	
 	//----------------------------------------------------------//



